// Code generated by protoc-gen-go. DO NOT EDIT.
// source: sdk/helper/storagepacker/types.proto

package storagepacker

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/golang/protobuf/ptypes/any"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Bucket is a construct to hold multiple items within itself, indexed by ID.
//
// A bucket contains items whose key shares a common prefix. When the bucket
// gets too large to hold more items, the length of the prefix is extended
// to create sub-buckets ("children" of this bucket) and the items are
// redistributed or "sharded".
type Bucket struct {
	// Key is the storage path where the bucket gets stored
	Key string `sentinel:"" protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// ItemMap stores a mapping of item ID to the stored bytes.
	ItemMap map[string][]byte `sentinel:"" protobuf:"bytes,2,rep,name=item_map,json=itemMap,proto3" json:"item_map,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// HasShards is true if the bucket been emptied into sub-buckets.
	// If HasShards is true then ItemMap should be empty.
	HasShards            bool     `sentinel:"" protobuf:"varint,3,opt,name=has_shards,json=hasShards,proto3" json:"has_shards,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Bucket) Reset()         { *m = Bucket{} }
func (m *Bucket) String() string { return proto.CompactTextString(m) }
func (*Bucket) ProtoMessage()    {}
func (*Bucket) Descriptor() ([]byte, []int) {
	return fileDescriptor_02e03d2111f28219, []int{0}
}

func (m *Bucket) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bucket.Unmarshal(m, b)
}
func (m *Bucket) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bucket.Marshal(b, m, deterministic)
}
func (m *Bucket) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bucket.Merge(m, src)
}
func (m *Bucket) XXX_Size() int {
	return xxx_messageInfo_Bucket.Size(m)
}
func (m *Bucket) XXX_DiscardUnknown() {
	xxx_messageInfo_Bucket.DiscardUnknown(m)
}

var xxx_messageInfo_Bucket proto.InternalMessageInfo

func (m *Bucket) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Bucket) GetItemMap() map[string][]byte {
	if m != nil {
		return m.ItemMap
	}
	return nil
}

func (m *Bucket) GetHasShards() bool {
	if m != nil {
		return m.HasShards
	}
	return false
}

func init() {
	proto.RegisterType((*Bucket)(nil), "storagepacker.Bucket")
	proto.RegisterMapType((map[string][]byte)(nil), "storagepacker.Bucket.ItemMapEntry")
}

func init() {
	proto.RegisterFile("sdk/helper/storagepacker/types.proto", fileDescriptor_02e03d2111f28219)
}

var fileDescriptor_02e03d2111f28219 = []byte{
	// 249 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x90, 0x41, 0x4b, 0xc3, 0x40,
	0x10, 0x85, 0xd9, 0x04, 0x6b, 0xbb, 0x56, 0x90, 0xe0, 0x21, 0x16, 0x84, 0x50, 0x3c, 0xe4, 0xb4,
	0x0b, 0x16, 0x41, 0x0a, 0x5e, 0x0a, 0x1e, 0x3c, 0x78, 0x89, 0x37, 0x2f, 0x65, 0x92, 0x8e, 0xd9,
	0x90, 0xa4, 0xbb, 0xec, 0xce, 0x16, 0xf2, 0xbf, 0xfc, 0x81, 0x62, 0xf6, 0x62, 0xc0, 0xde, 0xe6,
	0xcd, 0x9b, 0x6f, 0x86, 0x79, 0xfc, 0xc1, 0x1d, 0x5a, 0xa9, 0xb0, 0x33, 0x68, 0xa5, 0x23, 0x6d,
	0xa1, 0x46, 0x03, 0x55, 0x8b, 0x56, 0xd2, 0x60, 0xd0, 0x09, 0x63, 0x35, 0xe9, 0xe4, 0x7a, 0x62,
	0xad, 0xee, 0x6a, 0xad, 0xeb, 0x0e, 0xe5, 0x68, 0x96, 0xfe, 0x4b, 0xc2, 0x71, 0x08, 0x93, 0xeb,
	0x6f, 0xc6, 0x67, 0x3b, 0x5f, 0xb5, 0x48, 0xc9, 0x0d, 0x8f, 0x5b, 0x1c, 0x52, 0x96, 0xb1, 0x7c,
	0x51, 0xfc, 0x96, 0xc9, 0x0b, 0x9f, 0x37, 0x84, 0xfd, 0xbe, 0x07, 0x93, 0x46, 0x59, 0x9c, 0x5f,
	0x3d, 0xae, 0xc5, 0x64, 0xb3, 0x08, 0xa8, 0x78, 0x23, 0xec, 0xdf, 0xc1, 0xbc, 0x1e, 0xc9, 0x0e,
	0xc5, 0x65, 0x13, 0x54, 0x72, 0xcf, 0xb9, 0x02, 0xb7, 0x77, 0x0a, 0xec, 0xc1, 0xa5, 0x71, 0xc6,
	0xf2, 0x79, 0xb1, 0x50, 0xe0, 0x3e, 0xc6, 0xc6, 0x6a, 0xcb, 0x97, 0x7f, 0xb9, 0x7f, 0xee, 0xdf,
	0xf2, 0x8b, 0x13, 0x74, 0x1e, 0xd3, 0x28, 0x63, 0xf9, 0xb2, 0x08, 0x62, 0x1b, 0x3d, 0xb3, 0xdd,
	0xd3, 0xe7, 0xa6, 0x6e, 0x48, 0xf9, 0x52, 0x54, 0xba, 0x97, 0x0a, 0x9c, 0x6a, 0x2a, 0x6d, 0x8d,
	0x3c, 0x81, 0xef, 0x48, 0x9e, 0xcb, 0xa8, 0x9c, 0x8d, 0x4f, 0x6f, 0x7e, 0x02, 0x00, 0x00, 0xff,
	0xff, 0x2d, 0x4c, 0xbc, 0x8b, 0x46, 0x01, 0x00, 0x00,
}
