// Code generated by protoc-gen-go. DO NOT EDIT.
// source: physical/raft/types.proto

package raft

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type LogOperation struct {
	// OpType is the Operation type
	OpType uint32 `protobuf:"varint,1,opt,name=op_type,json=opType,proto3" json:"op_type,omitempty"`
	// Flags is an opaque value, currently unused. Reserved.
	Flags uint64 `protobuf:"varint,2,opt,name=flags,proto3" json:"flags,omitempty"`
	// Key that is being affected
	Key string `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	// Value is optional, corresponds to the key
	Value                []byte   `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogOperation) Reset()         { *m = LogOperation{} }
func (m *LogOperation) String() string { return proto.CompactTextString(m) }
func (*LogOperation) ProtoMessage()    {}
func (*LogOperation) Descriptor() ([]byte, []int) {
	return fileDescriptor_a8b3efb4def82ab3, []int{0}
}

func (m *LogOperation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogOperation.Unmarshal(m, b)
}
func (m *LogOperation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogOperation.Marshal(b, m, deterministic)
}
func (m *LogOperation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogOperation.Merge(m, src)
}
func (m *LogOperation) XXX_Size() int {
	return xxx_messageInfo_LogOperation.Size(m)
}
func (m *LogOperation) XXX_DiscardUnknown() {
	xxx_messageInfo_LogOperation.DiscardUnknown(m)
}

var xxx_messageInfo_LogOperation proto.InternalMessageInfo

func (m *LogOperation) GetOpType() uint32 {
	if m != nil {
		return m.OpType
	}
	return 0
}

func (m *LogOperation) GetFlags() uint64 {
	if m != nil {
		return m.Flags
	}
	return 0
}

func (m *LogOperation) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *LogOperation) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type LogData struct {
	Operations           []*LogOperation `protobuf:"bytes,1,rep,name=operations,proto3" json:"operations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *LogData) Reset()         { *m = LogData{} }
func (m *LogData) String() string { return proto.CompactTextString(m) }
func (*LogData) ProtoMessage()    {}
func (*LogData) Descriptor() ([]byte, []int) {
	return fileDescriptor_a8b3efb4def82ab3, []int{1}
}

func (m *LogData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogData.Unmarshal(m, b)
}
func (m *LogData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogData.Marshal(b, m, deterministic)
}
func (m *LogData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogData.Merge(m, src)
}
func (m *LogData) XXX_Size() int {
	return xxx_messageInfo_LogData.Size(m)
}
func (m *LogData) XXX_DiscardUnknown() {
	xxx_messageInfo_LogData.DiscardUnknown(m)
}

var xxx_messageInfo_LogData proto.InternalMessageInfo

func (m *LogData) GetOperations() []*LogOperation {
	if m != nil {
		return m.Operations
	}
	return nil
}

func init() {
	proto.RegisterType((*LogOperation)(nil), "raft.LogOperation")
	proto.RegisterType((*LogData)(nil), "raft.LogData")
}

func init() { proto.RegisterFile("physical/raft/types.proto", fileDescriptor_a8b3efb4def82ab3) }

var fileDescriptor_a8b3efb4def82ab3 = []byte{
	// 213 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x8f, 0x41, 0x4b, 0x03, 0x31,
	0x10, 0x85, 0x89, 0xbb, 0xb6, 0x38, 0x56, 0x90, 0x20, 0x18, 0x6f, 0xa1, 0xa7, 0xe0, 0x61, 0x03,
	0xf5, 0xec, 0x45, 0x3c, 0x16, 0x84, 0xe0, 0xc9, 0x8b, 0x4c, 0x97, 0x74, 0x77, 0x31, 0x3a, 0x43,
	0x92, 0x2d, 0xe4, 0xdf, 0x4b, 0x2c, 0x42, 0x7b, 0x9b, 0x37, 0x7c, 0xf0, 0xde, 0x07, 0x0f, 0x3c,
	0x96, 0x34, 0xf5, 0x18, 0x6c, 0xc4, 0x7d, 0xb6, 0xb9, 0xb0, 0x4f, 0x1d, 0x47, 0xca, 0x24, 0xdb,
	0xfa, 0x59, 0x7b, 0x58, 0x6d, 0x69, 0x78, 0x63, 0x1f, 0x31, 0x4f, 0xf4, 0x23, 0xef, 0x61, 0x49,
	0xfc, 0x59, 0x39, 0x25, 0xb4, 0x30, 0x37, 0x6e, 0x41, 0xfc, 0x5e, 0xd8, 0xcb, 0x3b, 0xb8, 0xdc,
	0x07, 0x1c, 0x92, 0xba, 0xd0, 0xc2, 0xb4, 0xee, 0x18, 0xe4, 0x2d, 0x34, 0x5f, 0xbe, 0xa8, 0x46,
	0x0b, 0x73, 0xe5, 0xea, 0x59, 0xb9, 0x03, 0x86, 0xd9, 0xab, 0x56, 0x0b, 0xb3, 0x72, 0xc7, 0xb0,
	0x7e, 0x86, 0xe5, 0x96, 0x86, 0x57, 0xcc, 0x28, 0x37, 0x00, 0xf4, 0x5f, 0x97, 0x94, 0xd0, 0x8d,
	0xb9, 0xde, 0xc8, 0xae, 0x8e, 0xe9, 0x4e, 0x97, 0xb8, 0x13, 0xea, 0xe5, 0xf1, 0xc3, 0x0c, 0x53,
	0x1e, 0xe7, 0x5d, 0xd7, 0xd3, 0xb7, 0x1d, 0x31, 0x8d, 0x53, 0x4f, 0x91, 0xed, 0x01, 0xe7, 0x90,
	0xed, 0x99, 0xe3, 0x6e, 0xf1, 0xa7, 0xf7, 0xf4, 0x1b, 0x00, 0x00, 0xff, 0xff, 0xa3, 0x1f, 0xe2,
	0xbe, 0xfb, 0x00, 0x00, 0x00,
}
