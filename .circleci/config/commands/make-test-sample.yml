description: make test sample
parameters:
  TESTARGS:
    type: string
    default: "-v"
  OUTDIR:
    type: string
  workspace_root:
    type: string
    default: /tmp/workspace
steps:
  - run:
      name: make test
      no_output_timeout: 20m
      environment:
        TESTARGS: "<< parameters.TESTARGS >>"
        OUTDIR: "<< parameters.OUTDIR >>"
      command: |
        set -eux -o pipefail

        # Install Go
        curl -sSLO "https://dl.google.com/go/go${GO_VERSION}.linux-amd64.tar.gz"
        sudo rm -rf /usr/local/go
        sudo tar -C /usr/local -xzf "go${GO_VERSION}.linux-amd64.tar.gz"
        rm -f "go${GO_VERSION}.linux-amd64.tar.gz"
        export GOPATH=/go
        export PATH="${PATH}:${GOPATH}/bin:/usr/local/go/bin"

        OUTDIR="<<parameters.workspace_root>>/$OUTDIR"

        # Run tests
        mkdir -p $OUTDIR
        OUT="$OUTDIR/CIRCLE_SHA1-testrun-$CIRCLE_NODE_INDEX.log"

        # We will force this to exit 0 each time, as this is treated as offline
        # data gathering, not a blocking part of the pipeline.
        # This is also necessary to have the persist_to_workspace step
        # executed unconditionally.
        set +eo pipefail 
        make test 2>&1 | tee $OUT
  - persist_to_workspace:
      when: always
      root: <<parameters.workspace_root>>
      paths:
        - <<parameters.OUTDIR>>

