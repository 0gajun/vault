### ***
### WARNING: DO NOT manually EDIT or MERGE this file, it is generated by 'make ci-config'.
### INSTEAD: Edit or merge the source in config/ then run 'make ci-config'.
### ***
version: 2
jobs:
  package_darwin_386:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - BUILD_JOB_NAME: '"package_darwin_386"'
    - BUILD_TAGS: '"vault"'
    - BUNDLE_NAME: '"vault_0.0.0-snapshot"'
    - CGOENABLED: '"0"'
    - GIT_REF: '"HEAD"'
    - GOARCH: '"386"'
    - GOOS: '"darwin"'
    - GO_VERSION: '"1.12.13"'
    - PACKAGE_NAME: '"vault_0.0.0-snapshot_darwin_386"'
    - PACKAGE_SPEC_ID: '"37a06a4a572a81b11a8f414d482c2ab3d73ab1330d4fbd430ce493c8a15617ff"'
    - PRODUCT_EDITION: '""'
    - PRODUCT_NAME: '"vault"'
    - PRODUCT_VERSION: '"0.0.0-snapshot"'
    - VERSION_MMP: '"0.0.0"'
    - VERSION_PRE: '"snapshot"'
    steps:
    - setup_remote_docker
    - checkout
    - run:
        command: |
          $MK write-cache-keys
        environment:
          MK: make -f release/build/build.mk
          NAMES: static ui yarn base
        name: 'Generate builder cache keys: static ui yarn base'
    - run:
        command: |
          $MK write-cache-keys
        environment:
          MK: make -f release/build/build.mk
          NAMES: static ui yarn base
        name: 'Generate builder cache keys: static ui yarn base'
    - restore_cache:
        keys:
        - static-archive-v1-{{ checksum ".buildcache/static-cache-key" }}
        - ui-archive-v1-{{ checksum ".buildcache/ui-cache-key" }}
        - yarn-archive-v1-{{ checksum ".buildcache/yarn-cache-key" }}
        - base-archive-v1-{{ checksum ".buildcache/base-cache-key" }}
    - run:
        command: |
          ls -lahR .buildcache
          docker image ls --no-trunc
        name: Info - list files in .buildcache/
    - run:
        command: |
          $MK static-load || \
          $MK ui-load || \
          $MK yarn-load || \
          $MK base-load || \
          echo "==> Unable to restore any builder images, rebuilding from scratch."
        environment:
          MK: make -f release/build/build.mk
        name: Restore static builder image (or best available).
    - run:
        command: |
          ls -lahR .buildcache
          docker image ls --no-trunc
        name: Info - list files in .buildcache/
    - restore_cache:
        key: package-cache-v1-37a06a4a572a81b11a8f414d482c2ab3d73ab1330d4fbd430ce493c8a15617ff-{{ checksum ".buildcache/static-cache-key" }}
    - run:
        command: |
          make build
        name: Compile package
    - store_artifacts:
        destination: dist/
        path: dist/
    - save_cache:
        key: package-cache-v1-37a06a4a572a81b11a8f414d482c2ab3d73ab1330d4fbd430ce493c8a15617ff-{{ checksum ".buildcache/static-cache-key" }}
        paths:
        - dist/
  bundle-releases:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    steps:
    - checkout
    - run:
        command: |
          $MK write-cache-keys
        environment:
          MK: make -f release/build/build.mk
          NAMES: static ui yarn base
        name: 'Generate builder cache keys: static ui yarn base'
    - restore_cache:
        key: package-cache-v1-37a06a4a572a81b11a8f414d482c2ab3d73ab1330d4fbd430ce493c8a15617ff-{{ checksum ".buildcache/static-cache-key" }}
    - restore_cache:
        key: package-cache-v1-56c3749657425e9a5283d2dbbd33aac46b59c3335ae7d0d8237500b77f817f88-{{ checksum ".buildcache/static-cache-key" }}
    - restore_cache:
        key: package-cache-v1-43755596c8d3db4ded062aa8ca57ae3d310888af4c16e9ee4e167f5a67d16a37-{{ checksum ".buildcache/static-cache-key" }}
    - restore_cache:
        key: package-cache-v1-bce0b438cd955a4dd5b205298e2f5176d1b0473b71d1cd9e7aa70e1577bfb83a-{{ checksum ".buildcache/static-cache-key" }}
    - restore_cache:
        key: package-cache-v1-f06749ddef3cd5569a79dce7317cd6a8bbf512cc4efefd26974ea2ab2e871d97-{{ checksum ".buildcache/static-cache-key" }}
    - restore_cache:
        key: package-cache-v1-7cf9912f5f978ae28b274ac238b988b5a9aa66cf5c4ba70994184e8f1971d1cd-{{ checksum ".buildcache/static-cache-key" }}
    - restore_cache:
        key: package-cache-v1-57614904d811c5a1a2b4b2c7663a8d750d96a347c233f8c64541ca95e3efc466-{{ checksum ".buildcache/static-cache-key" }}
    - restore_cache:
        key: package-cache-v1-082eba720efcbfe070146d0f0243c0ab090e9ceb9a43ebf458a0b89364bb55a2-{{ checksum ".buildcache/static-cache-key" }}
    - restore_cache:
        key: package-cache-v1-5dcc6b4e0cfd20e9d91c8c3888efb8cf4b16474ebca5742a61a12f2b41d30488-{{ checksum ".buildcache/static-cache-key" }}
    - restore_cache:
        key: package-cache-v1-b8d589d76e07867c548eda5223ca54f188ee70e1a1b4c0987e6f3fdc32287ad9-{{ checksum ".buildcache/static-cache-key" }}
    - restore_cache:
        key: package-cache-v1-c8c79ddda7a0a23f579caccbabdc032758ce7abeaa7ecba29b05c27369364bc9-{{ checksum ".buildcache/static-cache-key" }}
    - restore_cache:
        key: package-cache-v1-7c8fc2db6a0c71ba9e8cd36b6250630b254b474403cb739d21022c565ea06894-{{ checksum ".buildcache/static-cache-key" }}
    - restore_cache:
        key: package-cache-v1-6f73868ac4bb976921f6dbd7fd0a025ab7183ef8f3e4a65633b00369ee8c6f22-{{ checksum ".buildcache/static-cache-key" }}
    - restore_cache:
        key: package-cache-v1-367fd69b87c369e84e3c84e21ebf18bf13383e2233741f61f47f2d04752fc1b3-{{ checksum ".buildcache/static-cache-key" }}
    - restore_cache:
        key: package-cache-v1-c208d598c8c5e44bdeb6ba40f995510525561cd851de52337cdbcea8dad585ab-{{ checksum ".buildcache/static-cache-key" }}
    - restore_cache:
        key: package-cache-v1-2b2ae00062de1f76d8486b320c3e6d65982c1987c5e66198fa368d74381feb84-{{ checksum ".buildcache/static-cache-key" }}
    - run:
        command: ls -lahR dist/
  package_linux_arm64:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - BUILD_JOB_NAME: '"package_linux_arm64"'
    - BUILD_TAGS: '"vault"'
    - BUNDLE_NAME: '"vault_0.0.0-snapshot"'
    - CGOENABLED: '"0"'
    - GIT_REF: '"HEAD"'
    - GOARCH: '"arm64"'
    - GOOS: '"linux"'
    - GO_VERSION: '"1.12.13"'
    - PACKAGE_NAME: '"vault_0.0.0-snapshot_linux_arm64"'
    - PACKAGE_SPEC_ID: '"5dcc6b4e0cfd20e9d91c8c3888efb8cf4b16474ebca5742a61a12f2b41d30488"'
    - PRODUCT_EDITION: '""'
    - PRODUCT_NAME: '"vault"'
    - PRODUCT_VERSION: '"0.0.0-snapshot"'
    - VERSION_MMP: '"0.0.0"'
    - VERSION_PRE: '"snapshot"'
    steps:
    - setup_remote_docker
    - checkout
    - run:
        command: |
          $MK write-cache-keys
        environment:
          MK: make -f release/build/build.mk
          NAMES: static ui yarn base
        name: 'Generate builder cache keys: static ui yarn base'
    - run:
        command: |
          $MK write-cache-keys
        environment:
          MK: make -f release/build/build.mk
          NAMES: static ui yarn base
        name: 'Generate builder cache keys: static ui yarn base'
    - restore_cache:
        keys:
        - static-archive-v1-{{ checksum ".buildcache/static-cache-key" }}
        - ui-archive-v1-{{ checksum ".buildcache/ui-cache-key" }}
        - yarn-archive-v1-{{ checksum ".buildcache/yarn-cache-key" }}
        - base-archive-v1-{{ checksum ".buildcache/base-cache-key" }}
    - run:
        command: |
          ls -lahR .buildcache
          docker image ls --no-trunc
        name: Info - list files in .buildcache/
    - run:
        command: |
          $MK static-load || \
          $MK ui-load || \
          $MK yarn-load || \
          $MK base-load || \
          echo "==> Unable to restore any builder images, rebuilding from scratch."
        environment:
          MK: make -f release/build/build.mk
        name: Restore static builder image (or best available).
    - run:
        command: |
          ls -lahR .buildcache
          docker image ls --no-trunc
        name: Info - list files in .buildcache/
    - restore_cache:
        key: package-cache-v1-5dcc6b4e0cfd20e9d91c8c3888efb8cf4b16474ebca5742a61a12f2b41d30488-{{ checksum ".buildcache/static-cache-key" }}
    - run:
        command: |
          make build
        name: Compile package
    - store_artifacts:
        destination: dist/
        path: dist/
    - save_cache:
        key: package-cache-v1-5dcc6b4e0cfd20e9d91c8c3888efb8cf4b16474ebca5742a61a12f2b41d30488-{{ checksum ".buildcache/static-cache-key" }}
        paths:
        - dist/
  package_windows_386:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - BUILD_JOB_NAME: '"package_windows_386"'
    - BUILD_TAGS: '"vault"'
    - BUNDLE_NAME: '"vault_0.0.0-snapshot"'
    - CGOENABLED: '"0"'
    - GIT_REF: '"HEAD"'
    - GOARCH: '"386"'
    - GOOS: '"windows"'
    - GO_VERSION: '"1.12.13"'
    - PACKAGE_NAME: '"vault_0.0.0-snapshot_windows_386"'
    - PACKAGE_SPEC_ID: '"c208d598c8c5e44bdeb6ba40f995510525561cd851de52337cdbcea8dad585ab"'
    - PRODUCT_EDITION: '""'
    - PRODUCT_NAME: '"vault"'
    - PRODUCT_VERSION: '"0.0.0-snapshot"'
    - VERSION_MMP: '"0.0.0"'
    - VERSION_PRE: '"snapshot"'
    steps:
    - setup_remote_docker
    - checkout
    - run:
        command: |
          $MK write-cache-keys
        environment:
          MK: make -f release/build/build.mk
          NAMES: static ui yarn base
        name: 'Generate builder cache keys: static ui yarn base'
    - run:
        command: |
          $MK write-cache-keys
        environment:
          MK: make -f release/build/build.mk
          NAMES: static ui yarn base
        name: 'Generate builder cache keys: static ui yarn base'
    - restore_cache:
        keys:
        - static-archive-v1-{{ checksum ".buildcache/static-cache-key" }}
        - ui-archive-v1-{{ checksum ".buildcache/ui-cache-key" }}
        - yarn-archive-v1-{{ checksum ".buildcache/yarn-cache-key" }}
        - base-archive-v1-{{ checksum ".buildcache/base-cache-key" }}
    - run:
        command: |
          ls -lahR .buildcache
          docker image ls --no-trunc
        name: Info - list files in .buildcache/
    - run:
        command: |
          $MK static-load || \
          $MK ui-load || \
          $MK yarn-load || \
          $MK base-load || \
          echo "==> Unable to restore any builder images, rebuilding from scratch."
        environment:
          MK: make -f release/build/build.mk
        name: Restore static builder image (or best available).
    - run:
        command: |
          ls -lahR .buildcache
          docker image ls --no-trunc
        name: Info - list files in .buildcache/
    - restore_cache:
        key: package-cache-v1-c208d598c8c5e44bdeb6ba40f995510525561cd851de52337cdbcea8dad585ab-{{ checksum ".buildcache/static-cache-key" }}
    - run:
        command: |
          make build
        name: Compile package
    - store_artifacts:
        destination: dist/
        path: dist/
    - save_cache:
        key: package-cache-v1-c208d598c8c5e44bdeb6ba40f995510525561cd851de52337cdbcea8dad585ab-{{ checksum ".buildcache/static-cache-key" }}
        paths:
        - dist/
  install-ui-dependencies:
    docker:
    - image: node:10-buster
    shell: /usr/bin/env bash -euo pipefail -c
    working_directory: /src
    steps:
    - checkout
    - restore_cache:
        key: yarn-lock-v1-{{ checksum "ui/yarn.lock" }}
    - run:
        command: |
          cd ui
          yarn install
          npm rebuild node-sass
        name: Install UI dependencies
    - save_cache:
        key: yarn-lock-v1-{{ checksum "ui/yarn.lock" }}
        paths:
        - ui/node_modules
  package_netbsd_amd64:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - BUILD_JOB_NAME: '"package_netbsd_amd64"'
    - BUILD_TAGS: '"vault"'
    - BUNDLE_NAME: '"vault_0.0.0-snapshot"'
    - CGOENABLED: '"0"'
    - GIT_REF: '"HEAD"'
    - GOARCH: '"amd64"'
    - GOOS: '"netbsd"'
    - GO_VERSION: '"1.12.13"'
    - PACKAGE_NAME: '"vault_0.0.0-snapshot_netbsd_amd64"'
    - PACKAGE_SPEC_ID: '"c8c79ddda7a0a23f579caccbabdc032758ce7abeaa7ecba29b05c27369364bc9"'
    - PRODUCT_EDITION: '""'
    - PRODUCT_NAME: '"vault"'
    - PRODUCT_VERSION: '"0.0.0-snapshot"'
    - VERSION_MMP: '"0.0.0"'
    - VERSION_PRE: '"snapshot"'
    steps:
    - setup_remote_docker
    - checkout
    - run:
        command: |
          $MK write-cache-keys
        environment:
          MK: make -f release/build/build.mk
          NAMES: static ui yarn base
        name: 'Generate builder cache keys: static ui yarn base'
    - run:
        command: |
          $MK write-cache-keys
        environment:
          MK: make -f release/build/build.mk
          NAMES: static ui yarn base
        name: 'Generate builder cache keys: static ui yarn base'
    - restore_cache:
        keys:
        - static-archive-v1-{{ checksum ".buildcache/static-cache-key" }}
        - ui-archive-v1-{{ checksum ".buildcache/ui-cache-key" }}
        - yarn-archive-v1-{{ checksum ".buildcache/yarn-cache-key" }}
        - base-archive-v1-{{ checksum ".buildcache/base-cache-key" }}
    - run:
        command: |
          ls -lahR .buildcache
          docker image ls --no-trunc
        name: Info - list files in .buildcache/
    - run:
        command: |
          $MK static-load || \
          $MK ui-load || \
          $MK yarn-load || \
          $MK base-load || \
          echo "==> Unable to restore any builder images, rebuilding from scratch."
        environment:
          MK: make -f release/build/build.mk
        name: Restore static builder image (or best available).
    - run:
        command: |
          ls -lahR .buildcache
          docker image ls --no-trunc
        name: Info - list files in .buildcache/
    - restore_cache:
        key: package-cache-v1-c8c79ddda7a0a23f579caccbabdc032758ce7abeaa7ecba29b05c27369364bc9-{{ checksum ".buildcache/static-cache-key" }}
    - run:
        command: |
          make build
        name: Compile package
    - store_artifacts:
        destination: dist/
        path: dist/
    - save_cache:
        key: package-cache-v1-c8c79ddda7a0a23f579caccbabdc032758ce7abeaa7ecba29b05c27369364bc9-{{ checksum ".buildcache/static-cache-key" }}
        paths:
        - dist/
  package_linux_arm:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - BUILD_JOB_NAME: '"package_linux_arm"'
    - BUILD_TAGS: '"vault"'
    - BUNDLE_NAME: '"vault_0.0.0-snapshot"'
    - CGOENABLED: '"0"'
    - GIT_REF: '"HEAD"'
    - GOARCH: '"arm"'
    - GOOS: '"linux"'
    - GO_VERSION: '"1.12.13"'
    - PACKAGE_NAME: '"vault_0.0.0-snapshot_linux_arm"'
    - PACKAGE_SPEC_ID: '"082eba720efcbfe070146d0f0243c0ab090e9ceb9a43ebf458a0b89364bb55a2"'
    - PRODUCT_EDITION: '""'
    - PRODUCT_NAME: '"vault"'
    - PRODUCT_VERSION: '"0.0.0-snapshot"'
    - VERSION_MMP: '"0.0.0"'
    - VERSION_PRE: '"snapshot"'
    steps:
    - setup_remote_docker
    - checkout
    - run:
        command: |
          $MK write-cache-keys
        environment:
          MK: make -f release/build/build.mk
          NAMES: static ui yarn base
        name: 'Generate builder cache keys: static ui yarn base'
    - run:
        command: |
          $MK write-cache-keys
        environment:
          MK: make -f release/build/build.mk
          NAMES: static ui yarn base
        name: 'Generate builder cache keys: static ui yarn base'
    - restore_cache:
        keys:
        - static-archive-v1-{{ checksum ".buildcache/static-cache-key" }}
        - ui-archive-v1-{{ checksum ".buildcache/ui-cache-key" }}
        - yarn-archive-v1-{{ checksum ".buildcache/yarn-cache-key" }}
        - base-archive-v1-{{ checksum ".buildcache/base-cache-key" }}
    - run:
        command: |
          ls -lahR .buildcache
          docker image ls --no-trunc
        name: Info - list files in .buildcache/
    - run:
        command: |
          $MK static-load || \
          $MK ui-load || \
          $MK yarn-load || \
          $MK base-load || \
          echo "==> Unable to restore any builder images, rebuilding from scratch."
        environment:
          MK: make -f release/build/build.mk
        name: Restore static builder image (or best available).
    - run:
        command: |
          ls -lahR .buildcache
          docker image ls --no-trunc
        name: Info - list files in .buildcache/
    - restore_cache:
        key: package-cache-v1-082eba720efcbfe070146d0f0243c0ab090e9ceb9a43ebf458a0b89364bb55a2-{{ checksum ".buildcache/static-cache-key" }}
    - run:
        command: |
          make build
        name: Compile package
    - store_artifacts:
        destination: dist/
        path: dist/
    - save_cache:
        key: package-cache-v1-082eba720efcbfe070146d0f0243c0ab090e9ceb9a43ebf458a0b89364bb55a2-{{ checksum ".buildcache/static-cache-key" }}
        paths:
        - dist/
  package_solaris_amd64:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - BUILD_JOB_NAME: '"package_solaris_amd64"'
    - BUILD_TAGS: '"vault"'
    - BUNDLE_NAME: '"vault_0.0.0-snapshot"'
    - CGOENABLED: '"0"'
    - GIT_REF: '"HEAD"'
    - GOARCH: '"amd64"'
    - GOOS: '"solaris"'
    - GO_VERSION: '"1.12.13"'
    - PACKAGE_NAME: '"vault_0.0.0-snapshot_solaris_amd64"'
    - PACKAGE_SPEC_ID: '"367fd69b87c369e84e3c84e21ebf18bf13383e2233741f61f47f2d04752fc1b3"'
    - PRODUCT_EDITION: '""'
    - PRODUCT_NAME: '"vault"'
    - PRODUCT_VERSION: '"0.0.0-snapshot"'
    - VERSION_MMP: '"0.0.0"'
    - VERSION_PRE: '"snapshot"'
    steps:
    - setup_remote_docker
    - checkout
    - run:
        command: |
          $MK write-cache-keys
        environment:
          MK: make -f release/build/build.mk
          NAMES: static ui yarn base
        name: 'Generate builder cache keys: static ui yarn base'
    - run:
        command: |
          $MK write-cache-keys
        environment:
          MK: make -f release/build/build.mk
          NAMES: static ui yarn base
        name: 'Generate builder cache keys: static ui yarn base'
    - restore_cache:
        keys:
        - static-archive-v1-{{ checksum ".buildcache/static-cache-key" }}
        - ui-archive-v1-{{ checksum ".buildcache/ui-cache-key" }}
        - yarn-archive-v1-{{ checksum ".buildcache/yarn-cache-key" }}
        - base-archive-v1-{{ checksum ".buildcache/base-cache-key" }}
    - run:
        command: |
          ls -lahR .buildcache
          docker image ls --no-trunc
        name: Info - list files in .buildcache/
    - run:
        command: |
          $MK static-load || \
          $MK ui-load || \
          $MK yarn-load || \
          $MK base-load || \
          echo "==> Unable to restore any builder images, rebuilding from scratch."
        environment:
          MK: make -f release/build/build.mk
        name: Restore static builder image (or best available).
    - run:
        command: |
          ls -lahR .buildcache
          docker image ls --no-trunc
        name: Info - list files in .buildcache/
    - restore_cache:
        key: package-cache-v1-367fd69b87c369e84e3c84e21ebf18bf13383e2233741f61f47f2d04752fc1b3-{{ checksum ".buildcache/static-cache-key" }}
    - run:
        command: |
          make build
        name: Compile package
    - store_artifacts:
        destination: dist/
        path: dist/
    - save_cache:
        key: package-cache-v1-367fd69b87c369e84e3c84e21ebf18bf13383e2233741f61f47f2d04752fc1b3-{{ checksum ".buildcache/static-cache-key" }}
        paths:
        - dist/
  test-ui:
    docker:
    - image: node:10-buster
    shell: /usr/bin/env bash -euo pipefail -c
    working_directory: /src
    resource_class: medium+
    steps:
    - checkout
    - restore_cache:
        key: yarn-lock-v1-{{ checksum "ui/yarn.lock" }}
    - attach_workspace:
        at: .
    - run:
        command: |
          set -x

          # Install Chrome
          wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub \
            | apt-key add -
          echo "deb http://dl.google.com/linux/chrome/deb/ stable main" \
            | tee /etc/apt/sources.list.d/google-chrome.list
          apt-get update
          apt-get -y install google-chrome-stable
          rm /etc/apt/sources.list.d/google-chrome.list
          rm -rf /var/lib/apt/lists/* /var/cache/apt/*

          # Add ./bin to the PATH so vault binary can be run by Ember tests
          export PATH="${PWD}/bin:${PATH}"

          # Run Ember tests
          cd ui
          mkdir -p test-results/qunit
          yarn test:oss
        name: Test UI
    - store_artifacts:
        path: ui/test-results
    - store_test_results:
        path: ui/test-results
  test-ui-browserstack:
    docker:
    - image: node:10-buster
    shell: /usr/bin/env bash -euo pipefail -c
    working_directory: /src
    resource_class: medium+
    steps:
    - checkout
    - restore_cache:
        key: yarn-lock-v1-{{ checksum "ui/yarn.lock" }}
    - attach_workspace:
        at: .
    - run:
        command: |
          # Add ./bin to the PATH so vault binary can be found.
          export PATH="${PWD}"/bin:${PATH}
          make test-ui-browserstack
        name: Run Browserstack Tests
  package_freebsd_arm:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - BUILD_JOB_NAME: '"package_freebsd_arm"'
    - BUILD_TAGS: '"vault"'
    - BUNDLE_NAME: '"vault_0.0.0-snapshot"'
    - CGOENABLED: '"0"'
    - GIT_REF: '"HEAD"'
    - GOARCH: '"arm"'
    - GOOS: '"freebsd"'
    - GO_VERSION: '"1.12.13"'
    - PACKAGE_NAME: '"vault_0.0.0-snapshot_freebsd_arm"'
    - PACKAGE_SPEC_ID: '"f06749ddef3cd5569a79dce7317cd6a8bbf512cc4efefd26974ea2ab2e871d97"'
    - PRODUCT_EDITION: '""'
    - PRODUCT_NAME: '"vault"'
    - PRODUCT_VERSION: '"0.0.0-snapshot"'
    - VERSION_MMP: '"0.0.0"'
    - VERSION_PRE: '"snapshot"'
    steps:
    - setup_remote_docker
    - checkout
    - run:
        command: |
          $MK write-cache-keys
        environment:
          MK: make -f release/build/build.mk
          NAMES: static ui yarn base
        name: 'Generate builder cache keys: static ui yarn base'
    - run:
        command: |
          $MK write-cache-keys
        environment:
          MK: make -f release/build/build.mk
          NAMES: static ui yarn base
        name: 'Generate builder cache keys: static ui yarn base'
    - restore_cache:
        keys:
        - static-archive-v1-{{ checksum ".buildcache/static-cache-key" }}
        - ui-archive-v1-{{ checksum ".buildcache/ui-cache-key" }}
        - yarn-archive-v1-{{ checksum ".buildcache/yarn-cache-key" }}
        - base-archive-v1-{{ checksum ".buildcache/base-cache-key" }}
    - run:
        command: |
          ls -lahR .buildcache
          docker image ls --no-trunc
        name: Info - list files in .buildcache/
    - run:
        command: |
          $MK static-load || \
          $MK ui-load || \
          $MK yarn-load || \
          $MK base-load || \
          echo "==> Unable to restore any builder images, rebuilding from scratch."
        environment:
          MK: make -f release/build/build.mk
        name: Restore static builder image (or best available).
    - run:
        command: |
          ls -lahR .buildcache
          docker image ls --no-trunc
        name: Info - list files in .buildcache/
    - restore_cache:
        key: package-cache-v1-f06749ddef3cd5569a79dce7317cd6a8bbf512cc4efefd26974ea2ab2e871d97-{{ checksum ".buildcache/static-cache-key" }}
    - run:
        command: |
          make build
        name: Compile package
    - store_artifacts:
        destination: dist/
        path: dist/
    - save_cache:
        key: package-cache-v1-f06749ddef3cd5569a79dce7317cd6a8bbf512cc4efefd26974ea2ab2e871d97-{{ checksum ".buildcache/static-cache-key" }}
        paths:
        - dist/
  build-go-dev:
    docker:
    - image: golang:1.12.12-buster
    shell: /usr/bin/env bash -euo pipefail -c
    working_directory: /src
    steps:
    - checkout
    - restore_cache:
        key: go-sum-v1-{{ checksum "go.sum" }}
    - attach_workspace:
        at: .
    - run:
        command: |
          # Move dev UI assets to expected location
          rm -rf ./pkg
          mkdir ./pkg

          # Build dev binary
          make bootstrap dev
        name: Build dev binary
    - persist_to_workspace:
        paths:
        - bin
        root: .
  test-go-race:
    machine: true
    shell: /usr/bin/env bash -euo pipefail -c
    working_directory: ~/src
    steps:
    - checkout
    - run:
        command: |
          sudo mkdir /go
          sudo chown -R circleci:circleci /go
        name: Allow circleci user to restore Go modules cache
    - restore_cache:
        key: go-sum-v1-{{ checksum "go.sum" }}
    - run:
        command: |
          set -x

          # Install Go
          curl -sSLO "https://dl.google.com/go/go${GO_VERSION}.linux-amd64.tar.gz"
          sudo rm -rf /usr/local/go
          sudo tar -C /usr/local -xzf "go${GO_VERSION}.linux-amd64.tar.gz"
          rm -f "go${GO_VERSION}.linux-amd64.tar.gz"
          export GOPATH=/go
          export PATH="${PATH}:${GOPATH}/bin:/usr/local/go/bin"

          # Install CircleCI CLI
          curl -sSL \
              "https://github.com/CircleCI-Public/circleci-cli/releases/download/v${CIRCLECI_CLI_VERSION}/circleci-cli_${CIRCLECI_CLI_VERSION}_linux_amd64.tar.gz" \
            | sudo tar --overwrite -xz \
              -C /usr/local/bin \
              "circleci-cli_${CIRCLECI_CLI_VERSION}_linux_amd64/circleci"

          # Split Go tests by prior test times
          package_names=$(go list \
              -tags "${GO_TAGS}" \
              ./... \
            | grep -v /integ \
            | grep -v /vendor/ \
            | sort \
            | circleci tests split --split-by=timings --timings-type=classname)

          # Install gotestsum
          curl -sSL "https://github.com/gotestyourself/gotestsum/releases/download/v${GOTESTSUM_VERSION}/gotestsum_${GOTESTSUM_VERSION}_linux_amd64.tar.gz" \
            | sudo tar --overwrite -xz -C /usr/local/bin gotestsum

          # Run tests
          make prep
          mkdir -p test-results/go-test
          CGO_ENABLED= \
            VAULT_ADDR= \
            VAULT_TOKEN= \
            VAULT_DEV_ROOT_TOKEN_ID= \
            VAULT_ACC= \
            gotestsum --format=short-verbose --junitfile test-results/go-test/results.xml -- \
              -tags "${GO_TAGS}" \
              -timeout=60m \
              -parallel=20 \
              -race \
              ${package_names}
        name: Run Go tests
        no_output_timeout: 20m
    - store_artifacts:
        path: test-results
    - store_test_results:
        path: test-results
    environment:
    - CIRCLECI_CLI_VERSION: 0.1.5546
    - GO_TAGS: null
    - GO_VERSION: 1.12.12
    - GOTESTSUM_VERSION: 0.3.3
  test-go:
    machine: true
    shell: /usr/bin/env bash -euo pipefail -c
    working_directory: ~/src
    parallelism: 2
    steps:
    - checkout
    - run:
        command: |
          sudo mkdir /go
          sudo chown -R circleci:circleci /go
        name: Allow circleci user to restore Go modules cache
    - restore_cache:
        key: go-sum-v1-{{ checksum "go.sum" }}
    - run:
        command: |
          set -x

          # Install Go
          curl -sSLO "https://dl.google.com/go/go${GO_VERSION}.linux-amd64.tar.gz"
          sudo rm -rf /usr/local/go
          sudo tar -C /usr/local -xzf "go${GO_VERSION}.linux-amd64.tar.gz"
          rm -f "go${GO_VERSION}.linux-amd64.tar.gz"
          export GOPATH=/go
          export PATH="${PATH}:${GOPATH}/bin:/usr/local/go/bin"

          # Install CircleCI CLI
          curl -sSL \
              "https://github.com/CircleCI-Public/circleci-cli/releases/download/v${CIRCLECI_CLI_VERSION}/circleci-cli_${CIRCLECI_CLI_VERSION}_linux_amd64.tar.gz" \
            | sudo tar --overwrite -xz \
              -C /usr/local/bin \
              "circleci-cli_${CIRCLECI_CLI_VERSION}_linux_amd64/circleci"

          # Split Go tests by prior test times
          package_names=$(go list \
              -tags "${GO_TAGS}" \
              ./... \
            | grep -v /integ \
            | grep -v /vendor/ \
            | sort \
            | circleci tests split --split-by=timings --timings-type=classname)

          # Install gotestsum
          curl -sSL "https://github.com/gotestyourself/gotestsum/releases/download/v${GOTESTSUM_VERSION}/gotestsum_${GOTESTSUM_VERSION}_linux_amd64.tar.gz" \
            | sudo tar --overwrite -xz -C /usr/local/bin gotestsum

          # Run tests
          make prep
          mkdir -p test-results/go-test
          CGO_ENABLED= \
            VAULT_ADDR= \
            VAULT_TOKEN= \
            VAULT_DEV_ROOT_TOKEN_ID= \
            VAULT_ACC= \
            gotestsum --format=short-verbose --junitfile test-results/go-test/results.xml -- \
              -tags "${GO_TAGS}" \
              -timeout=60m \
              -parallel=20 \
               \
              ${package_names}
        name: Run Go tests
        no_output_timeout: 20m
    - store_artifacts:
        path: test-results
    - store_test_results:
        path: test-results
    environment:
    - CIRCLECI_CLI_VERSION: 0.1.5546
    - GO_TAGS: null
    - GO_VERSION: 1.12.12
    - GOTESTSUM_VERSION: 0.3.3
  package_linux_amd64:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - BUILD_JOB_NAME: '"package_linux_amd64"'
    - BUILD_TAGS: '"vault"'
    - BUNDLE_NAME: '"vault_0.0.0-snapshot"'
    - CGOENABLED: '"0"'
    - GIT_REF: '"HEAD"'
    - GOARCH: '"amd64"'
    - GOOS: '"linux"'
    - GO_VERSION: '"1.12.13"'
    - PACKAGE_NAME: '"vault_0.0.0-snapshot_linux_amd64"'
    - PACKAGE_SPEC_ID: '"57614904d811c5a1a2b4b2c7663a8d750d96a347c233f8c64541ca95e3efc466"'
    - PRODUCT_EDITION: '""'
    - PRODUCT_NAME: '"vault"'
    - PRODUCT_VERSION: '"0.0.0-snapshot"'
    - VERSION_MMP: '"0.0.0"'
    - VERSION_PRE: '"snapshot"'
    steps:
    - setup_remote_docker
    - checkout
    - run:
        command: |
          $MK write-cache-keys
        environment:
          MK: make -f release/build/build.mk
          NAMES: static ui yarn base
        name: 'Generate builder cache keys: static ui yarn base'
    - run:
        command: |
          $MK write-cache-keys
        environment:
          MK: make -f release/build/build.mk
          NAMES: static ui yarn base
        name: 'Generate builder cache keys: static ui yarn base'
    - restore_cache:
        keys:
        - static-archive-v1-{{ checksum ".buildcache/static-cache-key" }}
        - ui-archive-v1-{{ checksum ".buildcache/ui-cache-key" }}
        - yarn-archive-v1-{{ checksum ".buildcache/yarn-cache-key" }}
        - base-archive-v1-{{ checksum ".buildcache/base-cache-key" }}
    - run:
        command: |
          ls -lahR .buildcache
          docker image ls --no-trunc
        name: Info - list files in .buildcache/
    - run:
        command: |
          $MK static-load || \
          $MK ui-load || \
          $MK yarn-load || \
          $MK base-load || \
          echo "==> Unable to restore any builder images, rebuilding from scratch."
        environment:
          MK: make -f release/build/build.mk
        name: Restore static builder image (or best available).
    - run:
        command: |
          ls -lahR .buildcache
          docker image ls --no-trunc
        name: Info - list files in .buildcache/
    - restore_cache:
        key: package-cache-v1-57614904d811c5a1a2b4b2c7663a8d750d96a347c233f8c64541ca95e3efc466-{{ checksum ".buildcache/static-cache-key" }}
    - run:
        command: |
          make build
        name: Compile package
    - store_artifacts:
        destination: dist/
        path: dist/
    - save_cache:
        key: package-cache-v1-57614904d811c5a1a2b4b2c7663a8d750d96a347c233f8c64541ca95e3efc466-{{ checksum ".buildcache/static-cache-key" }}
        paths:
        - dist/
  package_windows_amd64:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - BUILD_JOB_NAME: '"package_windows_amd64"'
    - BUILD_TAGS: '"vault"'
    - BUNDLE_NAME: '"vault_0.0.0-snapshot"'
    - CGOENABLED: '"0"'
    - GIT_REF: '"HEAD"'
    - GOARCH: '"amd64"'
    - GOOS: '"windows"'
    - GO_VERSION: '"1.12.13"'
    - PACKAGE_NAME: '"vault_0.0.0-snapshot_windows_amd64"'
    - PACKAGE_SPEC_ID: '"2b2ae00062de1f76d8486b320c3e6d65982c1987c5e66198fa368d74381feb84"'
    - PRODUCT_EDITION: '""'
    - PRODUCT_NAME: '"vault"'
    - PRODUCT_VERSION: '"0.0.0-snapshot"'
    - VERSION_MMP: '"0.0.0"'
    - VERSION_PRE: '"snapshot"'
    steps:
    - setup_remote_docker
    - checkout
    - run:
        command: |
          $MK write-cache-keys
        environment:
          MK: make -f release/build/build.mk
          NAMES: static ui yarn base
        name: 'Generate builder cache keys: static ui yarn base'
    - run:
        command: |
          $MK write-cache-keys
        environment:
          MK: make -f release/build/build.mk
          NAMES: static ui yarn base
        name: 'Generate builder cache keys: static ui yarn base'
    - restore_cache:
        keys:
        - static-archive-v1-{{ checksum ".buildcache/static-cache-key" }}
        - ui-archive-v1-{{ checksum ".buildcache/ui-cache-key" }}
        - yarn-archive-v1-{{ checksum ".buildcache/yarn-cache-key" }}
        - base-archive-v1-{{ checksum ".buildcache/base-cache-key" }}
    - run:
        command: |
          ls -lahR .buildcache
          docker image ls --no-trunc
        name: Info - list files in .buildcache/
    - run:
        command: |
          $MK static-load || \
          $MK ui-load || \
          $MK yarn-load || \
          $MK base-load || \
          echo "==> Unable to restore any builder images, rebuilding from scratch."
        environment:
          MK: make -f release/build/build.mk
        name: Restore static builder image (or best available).
    - run:
        command: |
          ls -lahR .buildcache
          docker image ls --no-trunc
        name: Info - list files in .buildcache/
    - restore_cache:
        key: package-cache-v1-2b2ae00062de1f76d8486b320c3e6d65982c1987c5e66198fa368d74381feb84-{{ checksum ".buildcache/static-cache-key" }}
    - run:
        command: |
          make build
        name: Compile package
    - store_artifacts:
        destination: dist/
        path: dist/
    - save_cache:
        key: package-cache-v1-2b2ae00062de1f76d8486b320c3e6d65982c1987c5e66198fa368d74381feb84-{{ checksum ".buildcache/static-cache-key" }}
        paths:
        - dist/
  package_linux_386:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - BUILD_JOB_NAME: '"package_linux_386"'
    - BUILD_TAGS: '"vault"'
    - BUNDLE_NAME: '"vault_0.0.0-snapshot"'
    - CGOENABLED: '"0"'
    - GIT_REF: '"HEAD"'
    - GOARCH: '"386"'
    - GOOS: '"linux"'
    - GO_VERSION: '"1.12.13"'
    - PACKAGE_NAME: '"vault_0.0.0-snapshot_linux_386"'
    - PACKAGE_SPEC_ID: '"7cf9912f5f978ae28b274ac238b988b5a9aa66cf5c4ba70994184e8f1971d1cd"'
    - PRODUCT_EDITION: '""'
    - PRODUCT_NAME: '"vault"'
    - PRODUCT_VERSION: '"0.0.0-snapshot"'
    - VERSION_MMP: '"0.0.0"'
    - VERSION_PRE: '"snapshot"'
    steps:
    - setup_remote_docker
    - checkout
    - run:
        command: |
          $MK write-cache-keys
        environment:
          MK: make -f release/build/build.mk
          NAMES: static ui yarn base
        name: 'Generate builder cache keys: static ui yarn base'
    - run:
        command: |
          $MK write-cache-keys
        environment:
          MK: make -f release/build/build.mk
          NAMES: static ui yarn base
        name: 'Generate builder cache keys: static ui yarn base'
    - restore_cache:
        keys:
        - static-archive-v1-{{ checksum ".buildcache/static-cache-key" }}
        - ui-archive-v1-{{ checksum ".buildcache/ui-cache-key" }}
        - yarn-archive-v1-{{ checksum ".buildcache/yarn-cache-key" }}
        - base-archive-v1-{{ checksum ".buildcache/base-cache-key" }}
    - run:
        command: |
          ls -lahR .buildcache
          docker image ls --no-trunc
        name: Info - list files in .buildcache/
    - run:
        command: |
          $MK static-load || \
          $MK ui-load || \
          $MK yarn-load || \
          $MK base-load || \
          echo "==> Unable to restore any builder images, rebuilding from scratch."
        environment:
          MK: make -f release/build/build.mk
        name: Restore static builder image (or best available).
    - run:
        command: |
          ls -lahR .buildcache
          docker image ls --no-trunc
        name: Info - list files in .buildcache/
    - restore_cache:
        key: package-cache-v1-7cf9912f5f978ae28b274ac238b988b5a9aa66cf5c4ba70994184e8f1971d1cd-{{ checksum ".buildcache/static-cache-key" }}
    - run:
        command: |
          make build
        name: Compile package
    - store_artifacts:
        destination: dist/
        path: dist/
    - save_cache:
        key: package-cache-v1-7cf9912f5f978ae28b274ac238b988b5a9aa66cf5c4ba70994184e8f1971d1cd-{{ checksum ".buildcache/static-cache-key" }}
        paths:
        - dist/
  package_freebsd_amd64:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - BUILD_JOB_NAME: '"package_freebsd_amd64"'
    - BUILD_TAGS: '"vault"'
    - BUNDLE_NAME: '"vault_0.0.0-snapshot"'
    - CGOENABLED: '"0"'
    - GIT_REF: '"HEAD"'
    - GOARCH: '"amd64"'
    - GOOS: '"freebsd"'
    - GO_VERSION: '"1.12.13"'
    - PACKAGE_NAME: '"vault_0.0.0-snapshot_freebsd_amd64"'
    - PACKAGE_SPEC_ID: '"bce0b438cd955a4dd5b205298e2f5176d1b0473b71d1cd9e7aa70e1577bfb83a"'
    - PRODUCT_EDITION: '""'
    - PRODUCT_NAME: '"vault"'
    - PRODUCT_VERSION: '"0.0.0-snapshot"'
    - VERSION_MMP: '"0.0.0"'
    - VERSION_PRE: '"snapshot"'
    steps:
    - setup_remote_docker
    - checkout
    - run:
        command: |
          $MK write-cache-keys
        environment:
          MK: make -f release/build/build.mk
          NAMES: static ui yarn base
        name: 'Generate builder cache keys: static ui yarn base'
    - run:
        command: |
          $MK write-cache-keys
        environment:
          MK: make -f release/build/build.mk
          NAMES: static ui yarn base
        name: 'Generate builder cache keys: static ui yarn base'
    - restore_cache:
        keys:
        - static-archive-v1-{{ checksum ".buildcache/static-cache-key" }}
        - ui-archive-v1-{{ checksum ".buildcache/ui-cache-key" }}
        - yarn-archive-v1-{{ checksum ".buildcache/yarn-cache-key" }}
        - base-archive-v1-{{ checksum ".buildcache/base-cache-key" }}
    - run:
        command: |
          ls -lahR .buildcache
          docker image ls --no-trunc
        name: Info - list files in .buildcache/
    - run:
        command: |
          $MK static-load || \
          $MK ui-load || \
          $MK yarn-load || \
          $MK base-load || \
          echo "==> Unable to restore any builder images, rebuilding from scratch."
        environment:
          MK: make -f release/build/build.mk
        name: Restore static builder image (or best available).
    - run:
        command: |
          ls -lahR .buildcache
          docker image ls --no-trunc
        name: Info - list files in .buildcache/
    - restore_cache:
        key: package-cache-v1-bce0b438cd955a4dd5b205298e2f5176d1b0473b71d1cd9e7aa70e1577bfb83a-{{ checksum ".buildcache/static-cache-key" }}
    - run:
        command: |
          make build
        name: Compile package
    - store_artifacts:
        destination: dist/
        path: dist/
    - save_cache:
        key: package-cache-v1-bce0b438cd955a4dd5b205298e2f5176d1b0473b71d1cd9e7aa70e1577bfb83a-{{ checksum ".buildcache/static-cache-key" }}
        paths:
        - dist/
  package_openbsd_386:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - BUILD_JOB_NAME: '"package_openbsd_386"'
    - BUILD_TAGS: '"vault"'
    - BUNDLE_NAME: '"vault_0.0.0-snapshot"'
    - CGOENABLED: '"0"'
    - GIT_REF: '"HEAD"'
    - GOARCH: '"386"'
    - GOOS: '"openbsd"'
    - GO_VERSION: '"1.12.13"'
    - PACKAGE_NAME: '"vault_0.0.0-snapshot_openbsd_386"'
    - PACKAGE_SPEC_ID: '"7c8fc2db6a0c71ba9e8cd36b6250630b254b474403cb739d21022c565ea06894"'
    - PRODUCT_EDITION: '""'
    - PRODUCT_NAME: '"vault"'
    - PRODUCT_VERSION: '"0.0.0-snapshot"'
    - VERSION_MMP: '"0.0.0"'
    - VERSION_PRE: '"snapshot"'
    steps:
    - setup_remote_docker
    - checkout
    - run:
        command: |
          $MK write-cache-keys
        environment:
          MK: make -f release/build/build.mk
          NAMES: static ui yarn base
        name: 'Generate builder cache keys: static ui yarn base'
    - run:
        command: |
          $MK write-cache-keys
        environment:
          MK: make -f release/build/build.mk
          NAMES: static ui yarn base
        name: 'Generate builder cache keys: static ui yarn base'
    - restore_cache:
        keys:
        - static-archive-v1-{{ checksum ".buildcache/static-cache-key" }}
        - ui-archive-v1-{{ checksum ".buildcache/ui-cache-key" }}
        - yarn-archive-v1-{{ checksum ".buildcache/yarn-cache-key" }}
        - base-archive-v1-{{ checksum ".buildcache/base-cache-key" }}
    - run:
        command: |
          ls -lahR .buildcache
          docker image ls --no-trunc
        name: Info - list files in .buildcache/
    - run:
        command: |
          $MK static-load || \
          $MK ui-load || \
          $MK yarn-load || \
          $MK base-load || \
          echo "==> Unable to restore any builder images, rebuilding from scratch."
        environment:
          MK: make -f release/build/build.mk
        name: Restore static builder image (or best available).
    - run:
        command: |
          ls -lahR .buildcache
          docker image ls --no-trunc
        name: Info - list files in .buildcache/
    - restore_cache:
        key: package-cache-v1-7c8fc2db6a0c71ba9e8cd36b6250630b254b474403cb739d21022c565ea06894-{{ checksum ".buildcache/static-cache-key" }}
    - run:
        command: |
          make build
        name: Compile package
    - store_artifacts:
        destination: dist/
        path: dist/
    - save_cache:
        key: package-cache-v1-7c8fc2db6a0c71ba9e8cd36b6250630b254b474403cb739d21022c565ea06894-{{ checksum ".buildcache/static-cache-key" }}
        paths:
        - dist/
  package_openbsd_amd64:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - BUILD_JOB_NAME: '"package_openbsd_amd64"'
    - BUILD_TAGS: '"vault"'
    - BUNDLE_NAME: '"vault_0.0.0-snapshot"'
    - CGOENABLED: '"0"'
    - GIT_REF: '"HEAD"'
    - GOARCH: '"amd64"'
    - GOOS: '"openbsd"'
    - GO_VERSION: '"1.12.13"'
    - PACKAGE_NAME: '"vault_0.0.0-snapshot_openbsd_amd64"'
    - PACKAGE_SPEC_ID: '"6f73868ac4bb976921f6dbd7fd0a025ab7183ef8f3e4a65633b00369ee8c6f22"'
    - PRODUCT_EDITION: '""'
    - PRODUCT_NAME: '"vault"'
    - PRODUCT_VERSION: '"0.0.0-snapshot"'
    - VERSION_MMP: '"0.0.0"'
    - VERSION_PRE: '"snapshot"'
    steps:
    - setup_remote_docker
    - checkout
    - run:
        command: |
          $MK write-cache-keys
        environment:
          MK: make -f release/build/build.mk
          NAMES: static ui yarn base
        name: 'Generate builder cache keys: static ui yarn base'
    - run:
        command: |
          $MK write-cache-keys
        environment:
          MK: make -f release/build/build.mk
          NAMES: static ui yarn base
        name: 'Generate builder cache keys: static ui yarn base'
    - restore_cache:
        keys:
        - static-archive-v1-{{ checksum ".buildcache/static-cache-key" }}
        - ui-archive-v1-{{ checksum ".buildcache/ui-cache-key" }}
        - yarn-archive-v1-{{ checksum ".buildcache/yarn-cache-key" }}
        - base-archive-v1-{{ checksum ".buildcache/base-cache-key" }}
    - run:
        command: |
          ls -lahR .buildcache
          docker image ls --no-trunc
        name: Info - list files in .buildcache/
    - run:
        command: |
          $MK static-load || \
          $MK ui-load || \
          $MK yarn-load || \
          $MK base-load || \
          echo "==> Unable to restore any builder images, rebuilding from scratch."
        environment:
          MK: make -f release/build/build.mk
        name: Restore static builder image (or best available).
    - run:
        command: |
          ls -lahR .buildcache
          docker image ls --no-trunc
        name: Info - list files in .buildcache/
    - restore_cache:
        key: package-cache-v1-6f73868ac4bb976921f6dbd7fd0a025ab7183ef8f3e4a65633b00369ee8c6f22-{{ checksum ".buildcache/static-cache-key" }}
    - run:
        command: |
          make build
        name: Compile package
    - store_artifacts:
        destination: dist/
        path: dist/
    - save_cache:
        key: package-cache-v1-6f73868ac4bb976921f6dbd7fd0a025ab7183ef8f3e4a65633b00369ee8c6f22-{{ checksum ".buildcache/static-cache-key" }}
        paths:
        - dist/
  package_netbsd_386:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - BUILD_JOB_NAME: '"package_netbsd_386"'
    - BUILD_TAGS: '"vault"'
    - BUNDLE_NAME: '"vault_0.0.0-snapshot"'
    - CGOENABLED: '"0"'
    - GIT_REF: '"HEAD"'
    - GOARCH: '"386"'
    - GOOS: '"netbsd"'
    - GO_VERSION: '"1.12.13"'
    - PACKAGE_NAME: '"vault_0.0.0-snapshot_netbsd_386"'
    - PACKAGE_SPEC_ID: '"b8d589d76e07867c548eda5223ca54f188ee70e1a1b4c0987e6f3fdc32287ad9"'
    - PRODUCT_EDITION: '""'
    - PRODUCT_NAME: '"vault"'
    - PRODUCT_VERSION: '"0.0.0-snapshot"'
    - VERSION_MMP: '"0.0.0"'
    - VERSION_PRE: '"snapshot"'
    steps:
    - setup_remote_docker
    - checkout
    - run:
        command: |
          $MK write-cache-keys
        environment:
          MK: make -f release/build/build.mk
          NAMES: static ui yarn base
        name: 'Generate builder cache keys: static ui yarn base'
    - run:
        command: |
          $MK write-cache-keys
        environment:
          MK: make -f release/build/build.mk
          NAMES: static ui yarn base
        name: 'Generate builder cache keys: static ui yarn base'
    - restore_cache:
        keys:
        - static-archive-v1-{{ checksum ".buildcache/static-cache-key" }}
        - ui-archive-v1-{{ checksum ".buildcache/ui-cache-key" }}
        - yarn-archive-v1-{{ checksum ".buildcache/yarn-cache-key" }}
        - base-archive-v1-{{ checksum ".buildcache/base-cache-key" }}
    - run:
        command: |
          ls -lahR .buildcache
          docker image ls --no-trunc
        name: Info - list files in .buildcache/
    - run:
        command: |
          $MK static-load || \
          $MK ui-load || \
          $MK yarn-load || \
          $MK base-load || \
          echo "==> Unable to restore any builder images, rebuilding from scratch."
        environment:
          MK: make -f release/build/build.mk
        name: Restore static builder image (or best available).
    - run:
        command: |
          ls -lahR .buildcache
          docker image ls --no-trunc
        name: Info - list files in .buildcache/
    - restore_cache:
        key: package-cache-v1-b8d589d76e07867c548eda5223ca54f188ee70e1a1b4c0987e6f3fdc32287ad9-{{ checksum ".buildcache/static-cache-key" }}
    - run:
        command: |
          make build
        name: Compile package
    - store_artifacts:
        destination: dist/
        path: dist/
    - save_cache:
        key: package-cache-v1-b8d589d76e07867c548eda5223ca54f188ee70e1a1b4c0987e6f3fdc32287ad9-{{ checksum ".buildcache/static-cache-key" }}
        paths:
        - dist/
  package_darwin_amd64:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - BUILD_JOB_NAME: '"package_darwin_amd64"'
    - BUILD_TAGS: '"vault"'
    - BUNDLE_NAME: '"vault_0.0.0-snapshot"'
    - CGOENABLED: '"0"'
    - GIT_REF: '"HEAD"'
    - GOARCH: '"amd64"'
    - GOOS: '"darwin"'
    - GO_VERSION: '"1.12.13"'
    - PACKAGE_NAME: '"vault_0.0.0-snapshot_darwin_amd64"'
    - PACKAGE_SPEC_ID: '"56c3749657425e9a5283d2dbbd33aac46b59c3335ae7d0d8237500b77f817f88"'
    - PRODUCT_EDITION: '""'
    - PRODUCT_NAME: '"vault"'
    - PRODUCT_VERSION: '"0.0.0-snapshot"'
    - VERSION_MMP: '"0.0.0"'
    - VERSION_PRE: '"snapshot"'
    steps:
    - setup_remote_docker
    - checkout
    - run:
        command: |
          $MK write-cache-keys
        environment:
          MK: make -f release/build/build.mk
          NAMES: static ui yarn base
        name: 'Generate builder cache keys: static ui yarn base'
    - run:
        command: |
          $MK write-cache-keys
        environment:
          MK: make -f release/build/build.mk
          NAMES: static ui yarn base
        name: 'Generate builder cache keys: static ui yarn base'
    - restore_cache:
        keys:
        - static-archive-v1-{{ checksum ".buildcache/static-cache-key" }}
        - ui-archive-v1-{{ checksum ".buildcache/ui-cache-key" }}
        - yarn-archive-v1-{{ checksum ".buildcache/yarn-cache-key" }}
        - base-archive-v1-{{ checksum ".buildcache/base-cache-key" }}
    - run:
        command: |
          ls -lahR .buildcache
          docker image ls --no-trunc
        name: Info - list files in .buildcache/
    - run:
        command: |
          $MK static-load || \
          $MK ui-load || \
          $MK yarn-load || \
          $MK base-load || \
          echo "==> Unable to restore any builder images, rebuilding from scratch."
        environment:
          MK: make -f release/build/build.mk
        name: Restore static builder image (or best available).
    - run:
        command: |
          ls -lahR .buildcache
          docker image ls --no-trunc
        name: Info - list files in .buildcache/
    - restore_cache:
        key: package-cache-v1-56c3749657425e9a5283d2dbbd33aac46b59c3335ae7d0d8237500b77f817f88-{{ checksum ".buildcache/static-cache-key" }}
    - run:
        command: |
          make build
        name: Compile package
    - store_artifacts:
        destination: dist/
        path: dist/
    - save_cache:
        key: package-cache-v1-56c3749657425e9a5283d2dbbd33aac46b59c3335ae7d0d8237500b77f817f88-{{ checksum ".buildcache/static-cache-key" }}
        paths:
        - dist/
  package_freebsd_386:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - BUILD_JOB_NAME: '"package_freebsd_386"'
    - BUILD_TAGS: '"vault"'
    - BUNDLE_NAME: '"vault_0.0.0-snapshot"'
    - CGOENABLED: '"0"'
    - GIT_REF: '"HEAD"'
    - GOARCH: '"386"'
    - GOOS: '"freebsd"'
    - GO_VERSION: '"1.12.13"'
    - PACKAGE_NAME: '"vault_0.0.0-snapshot_freebsd_386"'
    - PACKAGE_SPEC_ID: '"43755596c8d3db4ded062aa8ca57ae3d310888af4c16e9ee4e167f5a67d16a37"'
    - PRODUCT_EDITION: '""'
    - PRODUCT_NAME: '"vault"'
    - PRODUCT_VERSION: '"0.0.0-snapshot"'
    - VERSION_MMP: '"0.0.0"'
    - VERSION_PRE: '"snapshot"'
    steps:
    - setup_remote_docker
    - checkout
    - run:
        command: |
          $MK write-cache-keys
        environment:
          MK: make -f release/build/build.mk
          NAMES: static ui yarn base
        name: 'Generate builder cache keys: static ui yarn base'
    - run:
        command: |
          $MK write-cache-keys
        environment:
          MK: make -f release/build/build.mk
          NAMES: static ui yarn base
        name: 'Generate builder cache keys: static ui yarn base'
    - restore_cache:
        keys:
        - static-archive-v1-{{ checksum ".buildcache/static-cache-key" }}
        - ui-archive-v1-{{ checksum ".buildcache/ui-cache-key" }}
        - yarn-archive-v1-{{ checksum ".buildcache/yarn-cache-key" }}
        - base-archive-v1-{{ checksum ".buildcache/base-cache-key" }}
    - run:
        command: |
          ls -lahR .buildcache
          docker image ls --no-trunc
        name: Info - list files in .buildcache/
    - run:
        command: |
          $MK static-load || \
          $MK ui-load || \
          $MK yarn-load || \
          $MK base-load || \
          echo "==> Unable to restore any builder images, rebuilding from scratch."
        environment:
          MK: make -f release/build/build.mk
        name: Restore static builder image (or best available).
    - run:
        command: |
          ls -lahR .buildcache
          docker image ls --no-trunc
        name: Info - list files in .buildcache/
    - restore_cache:
        key: package-cache-v1-43755596c8d3db4ded062aa8ca57ae3d310888af4c16e9ee4e167f5a67d16a37-{{ checksum ".buildcache/static-cache-key" }}
    - run:
        command: |
          make build
        name: Compile package
    - store_artifacts:
        destination: dist/
        path: dist/
    - save_cache:
        key: package-cache-v1-43755596c8d3db4ded062aa8ca57ae3d310888af4c16e9ee4e167f5a67d16a37-{{ checksum ".buildcache/static-cache-key" }}
        paths:
        - dist/
  pre-flight-checks:
    docker:
    - image: circleci/buildpack-deps
    environment:
    - CCI_VERSION: 0.1.5691
    shell: /usr/bin/env bash -euo pipefail
    steps:
    - checkout
    - run:
        command: |
          export CCI_PATH=/tmp/circleci-cli/$CCI_VERSION
          mkdir -p $CCI_PATH
          NAME=circleci-cli_${CCI_VERSION}_${ARCH}
          URL=$BASE/v${CCI_VERSION}/${NAME}.tar.gz
          curl -sSL $URL \
            | tar --overwrite --strip-components=1 -xz -C $CCI_PATH "${NAME}/circleci"
          # Add circleci to the path for subsequent steps.
          echo "export PATH=$CCI_PATH:\$PATH" >> $BASH_ENV
          # Done, print some debug info.
          set -x
          . $BASH_ENV
          which circleci
          circleci version
        environment:
          ARCH: linux_amd64
          BASE: https://github.com/CircleCI-Public/circleci-cli/releases/download
        name: Install CircleCI CLI
    - run:
        command: make ci-verify
  go-mod-download:
    docker:
    - image: golang:1.12.12-buster
    shell: /usr/bin/env bash -euo pipefail -c
    working_directory: /src
    steps:
    - add_ssh_keys:
        fingerprints:
        - c6:96:98:82:dc:04:6c:39:dd:ac:83:05:e3:15:1c:98
    - checkout
    - restore_cache:
        key: go-sum-v1-{{ checksum "go.sum" }}
    - run:
        command: go mod download
        name: Download Go modules
    - run:
        command: go mod verify
        name: Verify checksums of Go modules
    - save_cache:
        key: go-sum-v1-{{ checksum "go.sum" }}
        paths:
        - /go/pkg/mod
  cache-builder-images:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    steps:
    - setup_remote_docker
    - checkout
    - run:
        command: |
          $MK write-cache-keys
        environment:
          MK: make -f release/build/build.mk
          NAMES: static ui yarn base
        name: 'Generate builder cache keys: static ui yarn base'
    - restore_cache:
        key: base-archive-v1-{{ checksum ".buildcache/base-cache-key" }}
    - restore_cache:
        key: yarn-archive-v1-{{ checksum ".buildcache/yarn-cache-key" }}
    - restore_cache:
        key: ui-archive-v1-{{ checksum ".buildcache/ui-cache-key" }}
    - restore_cache:
        key: static-archive-v1-{{ checksum ".buildcache/static-cache-key" }}
    - run:
        command: |
          ls -lahR .buildcache
          docker image ls --no-trunc
        name: Info - list files in .buildcache/
    - run:
        command: |
          $MK $NAME-load || $MK $NAME-save
        environment:
          MK: make -f release/build/build.mk
          NAME: base
        name: Update base builder image layer
    - run:
        command: |
          $MK $NAME-load || $MK $NAME-save
        environment:
          MK: make -f release/build/build.mk
          NAME: yarn
        name: Update yarn builder image layer
    - run:
        command: |
          $MK $NAME-load || $MK $NAME-save
        environment:
          MK: make -f release/build/build.mk
          NAME: ui
        name: Update ui builder image layer
    - run:
        command: |
          $MK $NAME-load || $MK $NAME-save
        environment:
          MK: make -f release/build/build.mk
          NAME: static
        name: Update static builder image layer
    - run:
        command: |
          $MK write-cache-keys
        environment:
          MK: make -f release/build/build.mk
          NAMES: static ui yarn base
        name: 'Generate builder cache keys: static ui yarn base'
    - run:
        command: |
          ls -lahR .buildcache
          docker image ls --no-trunc
        name: Info - list files in .buildcache/
    - save_cache:
        key: base-archive-v1-{{ checksum ".buildcache/base-cache-key" }}
        paths:
        - .buildcache/base
    - save_cache:
        key: yarn-archive-v1-{{ checksum ".buildcache/yarn-cache-key" }}
        paths:
        - .buildcache/yarn
    - save_cache:
        key: ui-archive-v1-{{ checksum ".buildcache/ui-cache-key" }}
        paths:
        - .buildcache/ui
    - save_cache:
        key: static-archive-v1-{{ checksum ".buildcache/static-cache-key" }}
        paths:
        - .buildcache/static
workflows:
  build-release:
    jobs:
    - cache-builder-images:
        filters:
          branches:
            only:
            - /build-.*/
    - package_darwin_386:
        requires:
        - cache-builder-images
    - package_darwin_amd64:
        requires:
        - cache-builder-images
    - package_freebsd_386:
        requires:
        - cache-builder-images
    - package_freebsd_amd64:
        requires:
        - cache-builder-images
    - package_freebsd_arm:
        requires:
        - cache-builder-images
    - package_linux_386:
        requires:
        - cache-builder-images
    - package_linux_amd64:
        requires:
        - cache-builder-images
    - package_linux_arm:
        requires:
        - cache-builder-images
    - package_linux_arm64:
        requires:
        - cache-builder-images
    - package_netbsd_386:
        requires:
        - cache-builder-images
    - package_netbsd_amd64:
        requires:
        - cache-builder-images
    - package_openbsd_386:
        requires:
        - cache-builder-images
    - package_openbsd_amd64:
        requires:
        - cache-builder-images
    - package_solaris_amd64:
        requires:
        - cache-builder-images
    - package_windows_386:
        requires:
        - cache-builder-images
    - package_windows_amd64:
        requires:
        - cache-builder-images
    - bundle-releases:
        requires:
        - package_darwin_386
        - package_darwin_amd64
        - package_freebsd_386
        - package_freebsd_amd64
        - package_freebsd_arm
        - package_linux_386
        - package_linux_amd64
        - package_linux_arm
        - package_linux_arm64
        - package_netbsd_386
        - package_netbsd_amd64
        - package_openbsd_386
        - package_openbsd_amd64
        - package_solaris_amd64
        - package_windows_386
        - package_windows_amd64
  ci:
    jobs:
    - pre-flight-checks
    - install-ui-dependencies:
        requires:
        - pre-flight-checks
    - go-mod-download:
        requires:
        - pre-flight-checks
    - build-go-dev:
        requires:
        - go-mod-download
    - test-ui:
        requires:
        - install-ui-dependencies
        - build-go-dev
    - test-ui-browserstack:
        filters:
          branches:
            ignore: /pull\/[0-9]+/
        requires:
        - install-ui-dependencies
        - build-go-dev
    - test-go:
        requires:
        - build-go-dev
    - test-go-race:
        requires:
        - build-go-dev
  version: 2
