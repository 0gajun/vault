### ***
### WARNING: DO NOT manually EDIT or MERGE this file, it is generated by 'make ci-config'.
### INSTEAD: Edit or merge the source in config/ then run 'make ci-config'.
### ***
version: 2
jobs:
  package_darwin_386:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - PACKAGE_SPEC_ID: c7f9859c3092fc95a40524186ca2c4e7c51e0079
    - BINARY_NAME: vault
    - BUILDER_LAYER_ID: static_24b2c191871f61aa3b8d496820c689ff4c60e495
    - BUILD_JOB_NAME: package_darwin_386
    - BUILD_TAGS: vault
    - BUNDLE_NAME: vault_1.2.1-testbuild-sam
    - CGOENABLED: '0'
    - GO111MODULE: 'off'
    - GOARCH: '386'
    - GOOS: darwin
    - GO_VERSION: 1.12.13
    - PACKAGE_NAME: vault_1.2.1-testbuild-sam_darwin_386
    - PACKAGE_OUT_ROOT: dist/public/vault_1.2.1-testbuild-sam
    - PRODUCT_EDITION: ''
    - PRODUCT_NAME: vault
    - PRODUCT_VERSION: 1.2.1-testbuild-sam
    - PRODUCT_VERSION_MMP: 1.2.1
    - PRODUCT_VERSION_PRE: testbuild-sam
    - PUBLIC: 'YES'
    - YARN_VERSION: 1.19.1-1
    steps:
    - setup_remote_docker
    - checkout
    - run:
        command: make -C release write-builder-cache-keys
        name: Write builder layer cache keys
    - run:
        command: make -C release write-package-cache-keys
        name: Write package cache keys
    - restore_cache:
        keys:
        - buildcache-v1-base_02376a8228ddcfc3d014c896ea4897e75582221a-{{ checksum ".buildcache/cache-keys/base-02376a8228ddcfc3d014c896ea4897e75582221a" }}-yarn_4b8331e0d10d5546bf2b0a2b368376e7b9d7548f-{{ checksum ".buildcache/cache-keys/yarn-4b8331e0d10d5546bf2b0a2b368376e7b9d7548f" }}-ui_91f1adae63f46e6e66c3c656ac7d3575e9a107cc-{{ checksum ".buildcache/cache-keys/ui-91f1adae63f46e6e66c3c656ac7d3575e9a107cc" }}-static_24b2c191871f61aa3b8d496820c689ff4c60e495-{{ checksum ".buildcache/cache-keys/static-24b2c191871f61aa3b8d496820c689ff4c60e495" }}
        - buildcache-v1-base_02376a8228ddcfc3d014c896ea4897e75582221a-{{ checksum ".buildcache/cache-keys/base-02376a8228ddcfc3d014c896ea4897e75582221a" }}-yarn_4b8331e0d10d5546bf2b0a2b368376e7b9d7548f-{{ checksum ".buildcache/cache-keys/yarn-4b8331e0d10d5546bf2b0a2b368376e7b9d7548f" }}-ui_91f1adae63f46e6e66c3c656ac7d3575e9a107cc-{{ checksum ".buildcache/cache-keys/ui-91f1adae63f46e6e66c3c656ac7d3575e9a107cc" }}
        - buildcache-v1-base_02376a8228ddcfc3d014c896ea4897e75582221a-{{ checksum ".buildcache/cache-keys/base-02376a8228ddcfc3d014c896ea4897e75582221a" }}-yarn_4b8331e0d10d5546bf2b0a2b368376e7b9d7548f-{{ checksum ".buildcache/cache-keys/yarn-4b8331e0d10d5546bf2b0a2b368376e7b9d7548f" }}
        - buildcache-v1-base_02376a8228ddcfc3d014c896ea4897e75582221a-{{ checksum ".buildcache/cache-keys/base-02376a8228ddcfc3d014c896ea4897e75582221a" }}
    - restore_cache:
        key: package-{{checksum ".buildcache/cache-keys/package-c7f9859c3092fc95a40524186ca2c4e7c51e0079"}}
    - run:
        command: make -f release/layer.mk static_24b2c191871f61aa3b8d496820c689ff4c60e495-load || echo "No cached builder image to load."
    - run:
        command: make -C release package
    - run:
        command: ls -lahR dist/
    - store_artifacts:
        destination: dist/public/vault_1.2.1-testbuild-sam
        path: dist/public/vault_1.2.1-testbuild-sam
    - save_cache:
        key: buildcache-v1-base_02376a8228ddcfc3d014c896ea4897e75582221a-{{ checksum ".buildcache/cache-keys/base-02376a8228ddcfc3d014c896ea4897e75582221a" }}-yarn_4b8331e0d10d5546bf2b0a2b368376e7b9d7548f-{{ checksum ".buildcache/cache-keys/yarn-4b8331e0d10d5546bf2b0a2b368376e7b9d7548f" }}-ui_91f1adae63f46e6e66c3c656ac7d3575e9a107cc-{{ checksum ".buildcache/cache-keys/ui-91f1adae63f46e6e66c3c656ac7d3575e9a107cc" }}-static_24b2c191871f61aa3b8d496820c689ff4c60e495-{{ checksum ".buildcache/cache-keys/static-24b2c191871f61aa3b8d496820c689ff4c60e495" }}
        paths:
        - .buildcache/archives/static_24b2c191871f61aa3b8d496820c689ff4c60e495.tar.gz
    - save_cache:
        key: package-{{checksum ".buildcache/cache-keys/package-c7f9859c3092fc95a40524186ca2c4e7c51e0079"}}
        paths:
        - dist/public/vault_1.2.1-testbuild-sam
  bundle-releases:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    steps:
    - checkout
    - run:
        command: make -C release write-builder-cache-keys
        name: Write builder layer cache keys
    - run:
        command: make -C release write-package-cache-keys
        name: Write package cache keys
    - restore_cache:
        key: package-{{checksum ".buildcache/cache-keys/package-c7f9859c3092fc95a40524186ca2c4e7c51e0079"}}
    - restore_cache:
        key: package-{{checksum ".buildcache/cache-keys/package-274c2d659472a2c59ce257bf00b705aea142e36a"}}
    - run:
        command: ls -lahR dist/
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
  install-ui-dependencies:
    docker:
    - image: node:10-buster
    shell: /usr/bin/env bash -euo pipefail -c
    working_directory: /src
    steps:
    - checkout
    - restore_cache:
        key: yarn-lock-v1-{{ checksum "ui/yarn.lock" }}
    - run:
        command: |
          cd ui
          yarn install
          npm rebuild node-sass
        name: Install UI dependencies
    - save_cache:
        key: yarn-lock-v1-{{ checksum "ui/yarn.lock" }}
        paths:
        - ui/node_modules
  test-ui:
    docker:
    - image: node:10-buster
    shell: /usr/bin/env bash -euo pipefail -c
    working_directory: /src
    resource_class: medium+
    steps:
    - checkout
    - restore_cache:
        key: yarn-lock-v1-{{ checksum "ui/yarn.lock" }}
    - attach_workspace:
        at: .
    - run:
        command: |
          set -x

          # Install Chrome
          wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub \
            | apt-key add -
          echo "deb http://dl.google.com/linux/chrome/deb/ stable main" \
            | tee /etc/apt/sources.list.d/google-chrome.list
          apt-get update
          apt-get -y install google-chrome-stable
          rm /etc/apt/sources.list.d/google-chrome.list
          rm -rf /var/lib/apt/lists/* /var/cache/apt/*

          # Add ./bin to the PATH so vault binary can be run by Ember tests
          export PATH="${PWD}/bin:${PATH}"

          # Run Ember tests
          cd ui
          mkdir -p test-results/qunit
          yarn test:oss
        name: Test UI
    - store_artifacts:
        path: ui/test-results
    - store_test_results:
        path: ui/test-results
  test-ui-browserstack:
    docker:
    - image: node:10-buster
    shell: /usr/bin/env bash -euo pipefail -c
    working_directory: /src
    resource_class: medium+
    steps:
    - checkout
    - restore_cache:
        key: yarn-lock-v1-{{ checksum "ui/yarn.lock" }}
    - attach_workspace:
        at: .
    - run:
        command: |
          # Add ./bin to the PATH so vault binary can be found.
          export PATH="${PWD}"/bin:${PATH}
          make test-ui-browserstack
        name: Run Browserstack Tests
  build-go-dev:
    docker:
    - image: golang:1.12.12-buster
    shell: /usr/bin/env bash -euo pipefail -c
    working_directory: /src
    steps:
    - checkout
    - restore_cache:
        key: go-sum-v1-{{ checksum "go.sum" }}
    - attach_workspace:
        at: .
    - run:
        command: |
          # Move dev UI assets to expected location
          rm -rf ./pkg
          mkdir ./pkg

          # Build dev binary
          make bootstrap dev
        name: Build dev binary
    - persist_to_workspace:
        paths:
        - bin
        root: .
  test-go-race:
    machine: true
    shell: /usr/bin/env bash -euo pipefail -c
    working_directory: ~/src
    steps:
    - checkout
    - run:
        command: |
          sudo mkdir /go
          sudo chown -R circleci:circleci /go
        name: Allow circleci user to restore Go modules cache
    - restore_cache:
        key: go-sum-v1-{{ checksum "go.sum" }}
    - run:
        command: |
          set -x

          # Install Go
          curl -sSLO "https://dl.google.com/go/go${GO_VERSION}.linux-amd64.tar.gz"
          sudo rm -rf /usr/local/go
          sudo tar -C /usr/local -xzf "go${GO_VERSION}.linux-amd64.tar.gz"
          rm -f "go${GO_VERSION}.linux-amd64.tar.gz"
          export GOPATH=/go
          export PATH="${PATH}:${GOPATH}/bin:/usr/local/go/bin"

          # Install CircleCI CLI
          curl -sSL \
              "https://github.com/CircleCI-Public/circleci-cli/releases/download/v${CIRCLECI_CLI_VERSION}/circleci-cli_${CIRCLECI_CLI_VERSION}_linux_amd64.tar.gz" \
            | sudo tar --overwrite -xz \
              -C /usr/local/bin \
              "circleci-cli_${CIRCLECI_CLI_VERSION}_linux_amd64/circleci"

          # Split Go tests by prior test times
          package_names=$(go list \
              -tags "${GO_TAGS}" \
              ./... \
            | grep -v /integ \
            | grep -v /vendor/ \
            | sort \
            | circleci tests split --split-by=timings --timings-type=classname)

          # Install gotestsum
          curl -sSL "https://github.com/gotestyourself/gotestsum/releases/download/v${GOTESTSUM_VERSION}/gotestsum_${GOTESTSUM_VERSION}_linux_amd64.tar.gz" \
            | sudo tar --overwrite -xz -C /usr/local/bin gotestsum

          # Run tests
          make prep
          mkdir -p test-results/go-test
          CGO_ENABLED= \
            VAULT_ADDR= \
            VAULT_TOKEN= \
            VAULT_DEV_ROOT_TOKEN_ID= \
            VAULT_ACC= \
            gotestsum --format=short-verbose --junitfile test-results/go-test/results.xml -- \
              -tags "${GO_TAGS}" \
              -timeout=60m \
              -parallel=20 \
              -race \
              ${package_names}
        name: Run Go tests
        no_output_timeout: 20m
    - store_artifacts:
        path: test-results
    - store_test_results:
        path: test-results
    environment:
    - CIRCLECI_CLI_VERSION: 0.1.5546
    - GO_TAGS: null
    - GO_VERSION: 1.12.12
    - GOTESTSUM_VERSION: 0.3.3
  test-go:
    machine: true
    shell: /usr/bin/env bash -euo pipefail -c
    working_directory: ~/src
    parallelism: 2
    steps:
    - checkout
    - run:
        command: |
          sudo mkdir /go
          sudo chown -R circleci:circleci /go
        name: Allow circleci user to restore Go modules cache
    - restore_cache:
        key: go-sum-v1-{{ checksum "go.sum" }}
    - run:
        command: |
          set -x

          # Install Go
          curl -sSLO "https://dl.google.com/go/go${GO_VERSION}.linux-amd64.tar.gz"
          sudo rm -rf /usr/local/go
          sudo tar -C /usr/local -xzf "go${GO_VERSION}.linux-amd64.tar.gz"
          rm -f "go${GO_VERSION}.linux-amd64.tar.gz"
          export GOPATH=/go
          export PATH="${PATH}:${GOPATH}/bin:/usr/local/go/bin"

          # Install CircleCI CLI
          curl -sSL \
              "https://github.com/CircleCI-Public/circleci-cli/releases/download/v${CIRCLECI_CLI_VERSION}/circleci-cli_${CIRCLECI_CLI_VERSION}_linux_amd64.tar.gz" \
            | sudo tar --overwrite -xz \
              -C /usr/local/bin \
              "circleci-cli_${CIRCLECI_CLI_VERSION}_linux_amd64/circleci"

          # Split Go tests by prior test times
          package_names=$(go list \
              -tags "${GO_TAGS}" \
              ./... \
            | grep -v /integ \
            | grep -v /vendor/ \
            | sort \
            | circleci tests split --split-by=timings --timings-type=classname)

          # Install gotestsum
          curl -sSL "https://github.com/gotestyourself/gotestsum/releases/download/v${GOTESTSUM_VERSION}/gotestsum_${GOTESTSUM_VERSION}_linux_amd64.tar.gz" \
            | sudo tar --overwrite -xz -C /usr/local/bin gotestsum

          # Run tests
          make prep
          mkdir -p test-results/go-test
          CGO_ENABLED= \
            VAULT_ADDR= \
            VAULT_TOKEN= \
            VAULT_DEV_ROOT_TOKEN_ID= \
            VAULT_ACC= \
            gotestsum --format=short-verbose --junitfile test-results/go-test/results.xml -- \
              -tags "${GO_TAGS}" \
              -timeout=60m \
              -parallel=20 \
               \
              ${package_names}
        name: Run Go tests
        no_output_timeout: 20m
    - store_artifacts:
        path: test-results
    - store_test_results:
        path: test-results
    environment:
    - CIRCLECI_CLI_VERSION: 0.1.5546
    - GO_TAGS: null
    - GO_VERSION: 1.12.12
    - GOTESTSUM_VERSION: 0.3.3
  package_darwin_amd64:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
    - PACKAGE_SPEC_ID: 274c2d659472a2c59ce257bf00b705aea142e36a
    - BINARY_NAME: vault
    - BUILDER_LAYER_ID: static_24b2c191871f61aa3b8d496820c689ff4c60e495
    - BUILD_JOB_NAME: package_darwin_amd64
    - BUILD_TAGS: vault
    - BUNDLE_NAME: vault_1.2.1-testbuild-sam
    - CGOENABLED: '0'
    - GO111MODULE: 'off'
    - GOARCH: amd64
    - GOOS: darwin
    - GO_VERSION: 1.12.13
    - PACKAGE_NAME: vault_1.2.1-testbuild-sam_darwin_amd64
    - PACKAGE_OUT_ROOT: dist/public/vault_1.2.1-testbuild-sam
    - PRODUCT_EDITION: ''
    - PRODUCT_NAME: vault
    - PRODUCT_VERSION: 1.2.1-testbuild-sam
    - PRODUCT_VERSION_MMP: 1.2.1
    - PRODUCT_VERSION_PRE: testbuild-sam
    - PUBLIC: 'YES'
    - YARN_VERSION: 1.19.1-1
    steps:
    - setup_remote_docker
    - checkout
    - run:
        command: make -C release write-builder-cache-keys
        name: Write builder layer cache keys
    - run:
        command: make -C release write-package-cache-keys
        name: Write package cache keys
    - restore_cache:
        keys:
        - buildcache-v1-base_02376a8228ddcfc3d014c896ea4897e75582221a-{{ checksum ".buildcache/cache-keys/base-02376a8228ddcfc3d014c896ea4897e75582221a" }}-yarn_4b8331e0d10d5546bf2b0a2b368376e7b9d7548f-{{ checksum ".buildcache/cache-keys/yarn-4b8331e0d10d5546bf2b0a2b368376e7b9d7548f" }}-ui_91f1adae63f46e6e66c3c656ac7d3575e9a107cc-{{ checksum ".buildcache/cache-keys/ui-91f1adae63f46e6e66c3c656ac7d3575e9a107cc" }}-static_24b2c191871f61aa3b8d496820c689ff4c60e495-{{ checksum ".buildcache/cache-keys/static-24b2c191871f61aa3b8d496820c689ff4c60e495" }}
        - buildcache-v1-base_02376a8228ddcfc3d014c896ea4897e75582221a-{{ checksum ".buildcache/cache-keys/base-02376a8228ddcfc3d014c896ea4897e75582221a" }}-yarn_4b8331e0d10d5546bf2b0a2b368376e7b9d7548f-{{ checksum ".buildcache/cache-keys/yarn-4b8331e0d10d5546bf2b0a2b368376e7b9d7548f" }}-ui_91f1adae63f46e6e66c3c656ac7d3575e9a107cc-{{ checksum ".buildcache/cache-keys/ui-91f1adae63f46e6e66c3c656ac7d3575e9a107cc" }}
        - buildcache-v1-base_02376a8228ddcfc3d014c896ea4897e75582221a-{{ checksum ".buildcache/cache-keys/base-02376a8228ddcfc3d014c896ea4897e75582221a" }}-yarn_4b8331e0d10d5546bf2b0a2b368376e7b9d7548f-{{ checksum ".buildcache/cache-keys/yarn-4b8331e0d10d5546bf2b0a2b368376e7b9d7548f" }}
        - buildcache-v1-base_02376a8228ddcfc3d014c896ea4897e75582221a-{{ checksum ".buildcache/cache-keys/base-02376a8228ddcfc3d014c896ea4897e75582221a" }}
    - restore_cache:
        key: package-{{checksum ".buildcache/cache-keys/package-274c2d659472a2c59ce257bf00b705aea142e36a"}}
    - run:
        command: make -f release/layer.mk static_24b2c191871f61aa3b8d496820c689ff4c60e495-load || echo "No cached builder image to load."
    - run:
        command: make -C release package
    - run:
        command: ls -lahR dist/
    - store_artifacts:
        destination: dist/public/vault_1.2.1-testbuild-sam
        path: dist/public/vault_1.2.1-testbuild-sam
    - save_cache:
        key: buildcache-v1-base_02376a8228ddcfc3d014c896ea4897e75582221a-{{ checksum ".buildcache/cache-keys/base-02376a8228ddcfc3d014c896ea4897e75582221a" }}-yarn_4b8331e0d10d5546bf2b0a2b368376e7b9d7548f-{{ checksum ".buildcache/cache-keys/yarn-4b8331e0d10d5546bf2b0a2b368376e7b9d7548f" }}-ui_91f1adae63f46e6e66c3c656ac7d3575e9a107cc-{{ checksum ".buildcache/cache-keys/ui-91f1adae63f46e6e66c3c656ac7d3575e9a107cc" }}-static_24b2c191871f61aa3b8d496820c689ff4c60e495-{{ checksum ".buildcache/cache-keys/static-24b2c191871f61aa3b8d496820c689ff4c60e495" }}
        paths:
        - .buildcache/archives/static_24b2c191871f61aa3b8d496820c689ff4c60e495.tar.gz
    - save_cache:
        key: package-{{checksum ".buildcache/cache-keys/package-274c2d659472a2c59ce257bf00b705aea142e36a"}}
        paths:
        - dist/public/vault_1.2.1-testbuild-sam
  pre-flight-checks:
    docker:
    - image: circleci/buildpack-deps
    environment:
    - CCI_VERSION: 0.1.5691
    shell: /usr/bin/env bash -euo pipefail
    steps:
    - checkout
    - run:
        command: |
          export CCI_PATH=/tmp/circleci-cli/$CCI_VERSION
          mkdir -p $CCI_PATH
          NAME=circleci-cli_${CCI_VERSION}_${ARCH}
          URL=$BASE/v${CCI_VERSION}/${NAME}.tar.gz
          curl -sSL $URL \
            | tar --overwrite --strip-components=1 -xz -C $CCI_PATH "${NAME}/circleci"
          # Add circleci to the path for subsequent steps.
          echo "export PATH=$CCI_PATH:\$PATH" >> $BASH_ENV
          # Done, print some debug info.
          set -x
          . $BASH_ENV
          which circleci
          circleci version
        environment:
          ARCH: linux_amd64
          BASE: https://github.com/CircleCI-Public/circleci-cli/releases/download
        name: Install CircleCI CLI
    - run:
        command: make ci-verify
  go-mod-download:
    docker:
    - image: node:10-buster
    shell: /usr/bin/env bash -euo pipefail -c
    working_directory: /go/src/github.com/hashicorp/vault
    steps:
    - checkout
    - restore_cache:
        key: yarn-lock-v6-{{ checksum "ui/yarn.lock" }}
    - run:
        command: |
          cd ui
          yarn install
          npm rebuild node-sass
        name: Install UI dependencies
    - save_cache:
        key: go-sum-v1-{{ checksum "go.sum" }}
        paths:
        - /go/pkg/mod
  cache-builder-images:
    docker:
    - image: circleci/buildpack-deps
    shell: /usr/bin/env bash -euo pipefail -c
    steps:
    - setup_remote_docker
    - checkout
    - run:
        command: make -C release write-builder-cache-keys
        name: Write builder layer cache keys
    - run:
        command: make -C release write-package-cache-keys
        name: Write package cache keys
    - restore_cache:
        keys:
        - buildcache-v1-base_02376a8228ddcfc3d014c896ea4897e75582221a-{{ checksum ".buildcache/cache-keys/base-02376a8228ddcfc3d014c896ea4897e75582221a" }}-yarn_4b8331e0d10d5546bf2b0a2b368376e7b9d7548f-{{ checksum ".buildcache/cache-keys/yarn-4b8331e0d10d5546bf2b0a2b368376e7b9d7548f" }}-ui_91f1adae63f46e6e66c3c656ac7d3575e9a107cc-{{ checksum ".buildcache/cache-keys/ui-91f1adae63f46e6e66c3c656ac7d3575e9a107cc" }}-static_24b2c191871f61aa3b8d496820c689ff4c60e495-{{ checksum ".buildcache/cache-keys/static-24b2c191871f61aa3b8d496820c689ff4c60e495" }}
        - buildcache-v1-base_02376a8228ddcfc3d014c896ea4897e75582221a-{{ checksum ".buildcache/cache-keys/base-02376a8228ddcfc3d014c896ea4897e75582221a" }}-yarn_4b8331e0d10d5546bf2b0a2b368376e7b9d7548f-{{ checksum ".buildcache/cache-keys/yarn-4b8331e0d10d5546bf2b0a2b368376e7b9d7548f" }}-ui_91f1adae63f46e6e66c3c656ac7d3575e9a107cc-{{ checksum ".buildcache/cache-keys/ui-91f1adae63f46e6e66c3c656ac7d3575e9a107cc" }}
        - buildcache-v1-base_02376a8228ddcfc3d014c896ea4897e75582221a-{{ checksum ".buildcache/cache-keys/base-02376a8228ddcfc3d014c896ea4897e75582221a" }}-yarn_4b8331e0d10d5546bf2b0a2b368376e7b9d7548f-{{ checksum ".buildcache/cache-keys/yarn-4b8331e0d10d5546bf2b0a2b368376e7b9d7548f" }}
        - buildcache-v1-base_02376a8228ddcfc3d014c896ea4897e75582221a-{{ checksum ".buildcache/cache-keys/base-02376a8228ddcfc3d014c896ea4897e75582221a" }}
    - run:
        command: make -f release/layer.mk static_24b2c191871f61aa3b8d496820c689ff4c60e495-load || echo "No cached builder image to load."
    - run:
        command: make -f release/layer.mk static_24b2c191871f61aa3b8d496820c689ff4c60e495-image
    - run:
        command: make -f release/layer.mk static_24b2c191871f61aa3b8d496820c689ff4c60e495-save
    - save_cache:
        key: buildcache-v1-base_02376a8228ddcfc3d014c896ea4897e75582221a-{{ checksum ".buildcache/cache-keys/base-02376a8228ddcfc3d014c896ea4897e75582221a" }}-yarn_4b8331e0d10d5546bf2b0a2b368376e7b9d7548f-{{ checksum ".buildcache/cache-keys/yarn-4b8331e0d10d5546bf2b0a2b368376e7b9d7548f" }}-ui_91f1adae63f46e6e66c3c656ac7d3575e9a107cc-{{ checksum ".buildcache/cache-keys/ui-91f1adae63f46e6e66c3c656ac7d3575e9a107cc" }}-static_24b2c191871f61aa3b8d496820c689ff4c60e495-{{ checksum ".buildcache/cache-keys/static-24b2c191871f61aa3b8d496820c689ff4c60e495" }}
        paths:
        - .buildcache/archives/static_24b2c191871f61aa3b8d496820c689ff4c60e495.tar.gz
    environment:
    - AUTO_INSTALL_TOOLS: 'YES'
workflows:
  build-release:
    jobs:
    - cache-builder-images:
        filters:
          branches:
            only:
            - /build-.*/
            - /ci.*/
    - package_darwin_386:
        requires:
        - cache-builder-images
    - package_darwin_amd64:
        requires:
        - cache-builder-images
    - bundle-releases:
        requires:
        - package_darwin_386
        - package_darwin_amd64
  ci:
    jobs:
    - pre-flight-checks
    - install-ui-dependencies:
        requires:
        - pre-flight-checks
    - build-go-dev:
        requires:
        - pre-flight-checks
    - test-ui:
        requires:
        - install-ui-dependencies
        - build-go-dev
    - test-ui-browserstack:
        filters:
          branches:
            ignore: /pull\/[0-9]+/
        requires:
        - install-ui-dependencies
        - build-go-dev
    - test-go:
        requires:
        - build-go-dev
    - test-go-race:
        requires:
        - build-go-dev
  version: 2
